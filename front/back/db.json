{
  "users": [
    {
      "id": "1",
      "username": "hossein123",
      "password": "mypassword",
      "email": "hossein@mail.com",
      "fullname": "حسین رضایی",
      "avatar": "/img/users/default.jpg",
      "progress": [
        {
          "courseKey": "qmbni",
          "value": 70
        },
        {
          "courseKey": "qmath",
          "value": 50
        }
      ],
      "achievements": [
        {
          "id": 2,
          "name": "ثبت رکورد بازی",
          "icon": "gamepad",
          "desc": "با امتیاز بالای 100 در بازی الگوریتم‌ها دستاورد گرفتی",
          "date": "2025-07-22"
        }
      ],
      "gameRecords": [
        {
          "game": "alg_game",
          "scores": [
            {
              "score": 120,
              "date": "2025-07-22"
            },
            {
              "score": 85,
              "date": "2025-07-21"
            },
            {
              "score": 40,
              "date": "2025-07-20"
            }
          ]
        }
      ]
    },
    {
      "id": "d24c",
      "username": "حسین",
      "password": "1234"
    },
    {
      "id": "01c6",
      "username": "hossein",
      "password": "123456"
    },
    {
      "id": "37d6",
      "username": "javad",
      "password": "123456",
      "progress": [],
      "achievements": [],
      "gameRecords": [],
      "email": "",
      "fullname": "",
      "avatar": "/img/users/default.jpg"
    },
    {
      "id": "295a",
      "fullname": "javad",
      "username": "javad1",
      "email": "javad@gmail.com",
      "mobile": "09031901001",
      "level": "کارشناسی",
      "password": "123456",
      "records": {
        "binaryGame": 1,
        "binaryAction": 17
      }
    },
    {
      "id": "972e",
      "fullname": "reza",
      "username": "reza",
      "email": "reza@mail.com",
      "mobile": "09031901002",
      "level": "کارشناسی",
      "password": "123456",
      "progress": [
        {
          "courseKey": "qmbni",
          "value": 0
        },
        {
          "courseKey": "fundamental-cs",
          "lessonsPassed": [
            "کامپیوتر چیست و انواع آن"
          ]
        }
      ],
      "quizRecords": {
        "کامپیوتر چیست و انواع آن": {
          "score": 90,
          "date": 1753851233329
        },
        "مقدمه‌ای بر زبان‌های برنامه‌نویسی": {
          "score": 0,
          "date": 1753851024641
        }
      },
      "records": {
        "binaryAction": 7
      }
    },
    {
      "id": "755c",
      "fullname": "abdollah",
      "username": "abd12",
      "email": "abd12@yahoo.com",
      "mobile": "09031901009",
      "level": "کارشناسی",
      "password": "654321",
      "records": {
        "binaryAction": 13
      },
      "progress": [
        {
          "courseKey": "fundamental-cs",
          "lessonsPassed": [
            "کامپیوتر چیست و انواع آن",
            "سیستم‌های عددی و تبدیل مبناها"
          ]
        }
      ],
      "quizRecords": {
        "کامپیوتر چیست و انواع آن": {
          "score": 60,
          "date": 1753852127858
        },
        "سیستم‌های عددی و تبدیل مبناها": {
          "score": 80,
          "date": 1753852525351
        }
      }
    },
      {
    "id": "u100",
    "username": "maryam1",
    "password": "pass111",
    "fullname": "مریم احمدی",
    "email": "maryam@mail.com",
    "avatar": "/img/users/default.jpg",
    "progress": [
      { "courseKey": "qmbni", "value": 100 },
      { "courseKey": "qalgritm", "value": 60 }
    ],
    "achievements": [
      {
        "id": 1,
        "name": "کامل کردن یک دوره",
        "icon": "award",
        "desc": "دوره اصول برنامه‌نویسی را کامل کردید.",
        "date": "2025-07-10"
      },
      {
        "id": 4,
        "name": "امتیاز بالای ۸۰",
        "icon": "trophy",
        "desc": "در آزمون الگوریتم‌ها امتیاز ۸۰ یا بالاتر گرفتید.",
        "date": "2025-07-11"
      }
    ],
    "gameRecords": [
      {
        "game": "logic_game",
        "scores": [
          { "score": 47, "date": "2025-07-12" },
          { "score": 90, "date": "2025-07-07" }
        ]
      }
    ]
  },
  {
    "id": "u101",
    "username": "ali88",
    "password": "alipass88",
    "fullname": "علی محمدی",
    "email": "ali@gmail.com",
    "avatar": "/img/users/default.jpg",
    "progress": [
      { "courseKey": "qmbni", "value": 20 },
      { "courseKey": "qdatastuctr", "value": 0 }
    ],
    "achievements": [
      {
        "id": 7,
        "name": "شروع بازی جدید",
        "icon": "bolt",
        "desc": "اولین رکورد در بازی ثبت شد.",
        "date": "2025-07-15"
      }
    ],
    "gameRecords": [
      {
        "game": "math_game",
        "scores": [
          { "score": 30, "date": "2025-07-14" }
        ]
      }
    ]
  },
  {
    "id": "u102",
    "username": "soheila23",
    "password": "soh!@#23",
    "fullname": "سهیلا ترقی",
    "email": "soheila@yahoo.com",
    "avatar": "/img/users/female1.png",
    "progress": [
      { "courseKey": "qlogic", "value": 30 },
      { "courseKey": "qcomp", "value": 0 }
    ],
    "achievements": [],
    "gameRecords": [
      {
        "game": "alg_game",
        "scores": [
          { "score": 60, "date": "2025-06-12" },
          { "score": 75, "date": "2025-07-01" }
        ]
      }
    ]
  },
  {
    "id": "u103",
    "username": "rezaX",
    "password": "123456rez",
    "fullname": "رضا اکبری",
    "email": "rezax@mail.com",
    "avatar": "/img/users/default.jpg",
    "progress": [
      { "courseKey": "qmath", "value": 100 }
    ],
    "achievements": [
      {
        "id": 9,
        "name": "برنده چالش",
        "icon": "crown",
        "desc": "در چالش ریاضی به رتبه اول رسیدید.",
        "date": "2025-04-18"
      }
    ],
    "gameRecords": []
  },
  {
    "id": "u104",
    "username": "vahidDev",
    "password": "vahid9876",
    "fullname": "وحید فرحی",
    "email": "vahid@gmail.com",
    "avatar": "/img/users/male1.png",
    "progress": [
      {
        "courseKey": "fundamental-cs",
        "lessonsPassed": [
          "کامپیوتر چیست و انواع آن",
          "سیستم‌های عددی و تبدیل مبناها"
        ]
      }
    ],
    "quizRecords": {
      "سیستم‌های عددی و تبدیل مبناها": { "score": 95, "date": 1753823453000 },
      "کامپیوتر چیست و انواع آن": { "score": 80, "date": 1753820897000 }
    },
    "records": {
      "binaryGame": 2,
      "binaryAction": 5
    }
  }
  ],
  "courses": [
    {
      "key": "qmbni",
      "title": "اصول برنامه‌نویسی",
      "info": "آشنایی با مفاهیم اولیه",
      "lessons": [
        1,
        2,
        3
      ],
      "id": "7a2b"
    },
    {
      "key": "qmath",
      "title": "ریاضیات گسسته",
      "info": "مفاهیم پایه ریاضیات کامپیوتر",
      "lessons": [
        4,
        5
      ],
      "id": "d0ae"
    }
  ],
  "lessons": [
    {
      "id": "1",
      "courseKey": "qmbni",
      "title": "مقدمه برنامه‌نویسی",
      "description": "آشنایی با مفاهیم اولیه برنامه‌نویسی"
    }
  ],
  "questions": [
    {
      "id": "1",
      "course": "fundamental-cs",
      "label": "کامپیوتر چیست و انواع آن",
      "number": 1,
      "question": "کدام مورد تعریف صحیحی از کامپیوتر است؟",
      "options": [
        "دستگاهی برای تولید برق",
        "ابزاری که می‌تواند داده‌ها را پردازش و ذخیره کند",
        "وسیله سرگرمی فقط برای بازی",
        "تنها وسیله ارتباط با دیگران"
      ],
      "answer": 1
    },
    {
      "id": "2",
      "course": "fundamental-cs",
      "label": "کامپیوتر چیست و انواع آن",
      "number": 2,
      "question": "واژه Input در کامپیوتر به چه معناست؟",
      "options": [
        "خروجی برنامه",
        "دیتای وارد شده به سیستم جهت پردازش",
        "پردازش اطلاعات",
        "ذخیره‌سازی اطلاعات"
      ],
      "answer": 1
    },
    {
      "id": "3",
      "course": "fundamental-cs",
      "label": "کامپیوتر چیست و انواع آن",
      "number": 3,
      "question": "کدام گزینه یک نوع کامپیوتر شخصی محسوب نمی‌شود؟",
      "options": [
        "لپ‌تاپ",
        "تبلت",
        "سوپر کامپیوتر",
        "رومیزی (PC)"
      ],
      "answer": 2
    },
    {
      "id": "4",
      "course": "fundamental-cs",
      "label": "کامپیوتر چیست و انواع آن",
      "number": 4,
      "question": "کدام یک از وظایف اصلی کامپیوتر نیست؟",
      "options": [
        "ورودی",
        "پردازش",
        "تولید انرژی",
        "ذخیره‌سازی"
      ],
      "answer": 2
    },
    {
      "id": "5",
      "course": "fundamental-cs",
      "label": "کامپیوتر چیست و انواع آن",
      "number": 5,
      "question": "اولین نسل کامپیوترها بر پایه کدام تکنولوژی ساخته شدند؟",
      "options": [
        "مدارات مجتمع (IC)",
        "ترانزیستورها",
        "لامپ خلأ",
        "ریزپردازنده‌ها"
      ],
      "answer": 2
    },
    {
      "id": "6",
      "course": "fundamental-cs",
      "label": "کامپیوتر چیست و انواع آن",
      "number": 6,
      "question": "کدامیک وظیفه پردازش داده‌ها را دارد؟",
      "options": [
        "رم (RAM)",
        "پردازنده (CPU)",
        "مانیتور",
        "هارد دیسک"
      ],
      "answer": 1
    },
    {
      "id": "7",
      "course": "fundamental-cs",
      "label": "کامپیوتر چیست و انواع آن",
      "number": 7,
      "question": "کدام گزینه یک نوع کامپیوتر پرتابل (قابل حمل) است؟",
      "options": [
        "سرور",
        "موبایل",
        "سوپر کامپیوتر",
        "مینی کامپیوتر"
      ],
      "answer": 1
    },
    {
      "id": "8",
      "course": "fundamental-cs",
      "label": "کامپیوتر چیست و انواع آن",
      "number": 8,
      "question": "کدام مورد جزء واحدهای اصلی کامپیوتر است؟",
      "options": [
        "واحد ورودی",
        "واحد تغذیه",
        "واحد تهویه",
        "واحد نمایش"
      ],
      "answer": 0
    },
    {
      "id": "9",
      "course": "fundamental-cs",
      "label": "کامپیوتر چیست و انواع آن",
      "number": 9,
      "question": "کدام یک جزء حافظه غیر فرار است؟",
      "options": [
        "RAM",
        "هارددیسک",
        "کش",
        "رجیستر"
      ],
      "answer": 1
    },
    {
      "id": "10",
      "course": "fundamental-cs",
      "label": "کامپیوتر چیست و انواع آن",
      "number": 10,
      "question": "کدام یک جزء کامپیوتر نمی‌باشد؟",
      "options": [
        "پرینتر",
        "سی‌پی‌یو (CPU)",
        "رمز عبور",
        "مادربورد"
      ],
      "answer": 2
    },
    {
      "id": "11",
      "course": "fundamental-cs",
      "label": "سخت‌افزار، نرم‌افزار و اجزای اصلی کامپیوتر",
      "number": 1,
      "question": "کدام یک از موارد زیر سخت‌افزار کامپیوتر محسوب می‌شود؟",
      "options": [
        "مرورگر اینترنت",
        "مانیتور",
        "آنتی ویروس",
        "سیستم عامل"
      ],
      "answer": 1
    },
    {
      "id": "12",
      "course": "fundamental-cs",
      "label": "سخت‌افزار، نرم‌افزار و اجزای اصلی کامپیوتر",
      "number": 2,
      "question": "واژهٔ نرم‌افزار به چه معناست؟",
      "options": [
        "اجزای فیزیکی قابل لمس",
        "داده‌های ذخیره شده",
        "دستورات و برنامه‌هایی که توسط سخت‌افزار اجرا می‌شوند",
        "برنامه نویسی تحت وب"
      ],
      "answer": 2
    },
    {
      "id": "13",
      "course": "fundamental-cs",
      "label": "سخت‌افزار، نرم‌افزار و اجزای اصلی کامپیوتر",
      "number": 3,
      "question": "کدام یک نمونه‌ای از نرم‌افزار سیستمی است؟",
      "options": [
        "برنامه فتوشاپ",
        "پخش‌کننده موسیقی",
        "سیستم عامل ویندوز",
        "مرورگر کروم"
      ],
      "answer": 2
    },
    {
      "id": "14",
      "course": "fundamental-cs",
      "label": "سخت‌افزار، نرم‌افزار و اجزای اصلی کامپیوتر",
      "number": 4,
      "question": "UEFI یا BIOS جزو کدام دسته از اجزای کامپیوتر هستند؟",
      "options": [
        "ابزار جانبی",
        "نرم‌افزار سیستمی",
        "سخت‌افزار ذخیره‌سازی",
        "شبکه"
      ],
      "answer": 1
    },
    {
      "id": "15",
      "course": "fundamental-cs",
      "label": "سخت‌افزار، نرم‌افزار و اجزای اصلی کامپیوتر",
      "number": 5,
      "question": "کدام گزینه جزء حافظه‌های اولیه کامپیوتر محسوب می‌شود؟",
      "options": [
        "هارددیسک",
        "SSD",
        "RAM",
        "DVD"
      ],
      "answer": 2
    },
    {
      "id": "16",
      "course": "fundamental-cs",
      "label": "سخت‌افزار، نرم‌افزار و اجزای اصلی کامپیوتر",
      "number": 6,
      "question": "کدامیک از گزینه‌های زیر یک دستگاه ورودی است؟",
      "options": [
        "مانیتور",
        "کیبورد",
        "پرینتر",
        "بلندگو"
      ],
      "answer": 1
    },
    {
      "id": "17",
      "course": "fundamental-cs",
      "label": "سخت‌افزار، نرم‌افزار و اجزای اصلی کامپیوتر",
      "number": 7,
      "question": "وظیفه سیستم عامل چیست؟",
      "options": [
        "ارتباط بین کاربر و سخت‌افزار را برقرار می‌کند",
        "پردازش گرافیکی را افزایش می‌دهد",
        "فضای ذخیره‌سازی را گسترش می‌دهد",
        "تنها برای اجرای بازی‌ها استفاده می‌شود"
      ],
      "answer": 0
    },
    {
      "id": "18",
      "course": "fundamental-cs",
      "label": "سخت‌افزار، نرم‌افزار و اجزای اصلی کامپیوتر",
      "number": 8,
      "question": "کدام یک جزء نرم‌افزار کاربردی است؟",
      "options": [
        "MS Word",
        "BIOS",
        "CPU",
        "USB درایور"
      ],
      "answer": 0
    },
    {
      "id": "19",
      "course": "fundamental-cs",
      "label": "سخت‌افزار، نرم‌افزار و اجزای اصلی کامپیوتر",
      "number": 9,
      "question": "کدام گزینه به عنوان رابط اصلی بین سخت‌افزار و کاربر شناخته می‌شود؟",
      "options": [
        "آنتی ویروس",
        "سیستم عامل",
        "مادربورد",
        "کابل شبکه"
      ],
      "answer": 1
    },
    {
      "id": "20",
      "course": "fundamental-cs",
      "label": "سخت‌افزار، نرم‌افزار و اجزای اصلی کامپیوتر",
      "number": 10,
      "question": "کدامیک از اجزای زیر در دسته سخت‌افزار ذخیره‌سازی قرار می‌گیرد؟",
      "options": [
        "پردازنده (CPU)",
        "هاردیسک",
        "ویندوز",
        "صفحه کلید"
      ],
      "answer": 1
    },
    {
      "id": "21",
      "course": "fundamental-cs",
      "label": "آشنایی با آرایه‌ها",
      "number": 1,
      "question": "در برنامه‌نویسی، آرایه (Array) چیست؟",
      "options": [
        "یک متغیر ساده",
        "یک ساختار داده برای ذخیره مجموعه‌ای از داده‌ها با نوع یکسان",
        "یک تابع ریاضی",
        "یک حلقه اجرا"
      ],
      "answer": 1
    },
    {
      "id": "22",
      "course": "fundamental-cs",
      "label": "آشنایی با آرایه‌ها",
      "number": 2,
      "question": "اندیس اولین عنصر در اکثر زبان‌های برنامه‌نویسی سطح پایین مانند C چند است؟",
      "options": [
        "۱",
        "۲",
        "۰",
        "-۱"
      ],
      "answer": 2
    },
    {
      "id": "23",
      "course": "fundamental-cs",
      "label": "آشنایی با آرایه‌ها",
      "number": 3,
      "question": "اگر آرایه‌ای به اندازه ۵ تعریف شود، چند عنصر می‌تواند داشته باشد؟",
      "options": [
        "۶",
        "۱",
        "۵",
        "بستگی به زبان برنامه‌نویسی دارد"
      ],
      "answer": 2
    },
    {
      "id": "24",
      "course": "fundamental-cs",
      "label": "آشنایی با آرایه‌ها",
      "number": 4,
      "question": "کدام گزینه نشان‌دهنده مقداردهی اولیه صحیح آرایه‌ای از ۳ عدد صحیح در زبان C است؟",
      "options": [
        "int arr[3] = {1, 2, 3};",
        "arr = [1,2,3];",
        "array arr = (1,2,3);",
        "int arr = {1,2,3};"
      ],
      "answer": 0
    },
    {
      "id": "25",
      "course": "fundamental-cs",
      "label": "آشنایی با آرایه‌ها",
      "number": 5,
      "question": "اگر arr یک آرایه صحیح با ۵ خانه باشد، arr[4] کدام عنصر را بازمی‌گرداند؟",
      "options": [
        "عنصر پنجم",
        "عنصر چهارم",
        "عنصر اول",
        "خطا می‌دهد"
      ],
      "answer": 0
    },
    {
      "id": "26",
      "course": "fundamental-cs",
      "label": "آشنایی با آرایه‌ها",
      "number": 6,
      "question": "دسترسی به یک مقدار خارج از محدوده آرایه ممکن است چه مشکلی ایجاد کند؟",
      "options": [
        "اجرا بدون مشکل",
        "آزاد شدن حافظه",
        "خطای زمان اجرا (runtime error)",
        "صرفاً مقدار صفر برمی‌گرداند"
      ],
      "answer": 2
    },
    {
      "id": "27",
      "course": "fundamental-cs",
      "label": "آشنایی با آرایه‌ها",
      "number": 7,
      "question": "چگونه می‌توان تمام عناصر آرایه را پیمایش کرد؟",
      "options": [
        "با گرفتن حلقه روی طول آرایه",
        "بدون حلقه امکان‌پذیر نیست",
        "باید تابع خاص نوشت",
        "توسط تعریف متغیر جدید"
      ],
      "answer": 0
    },
    {
      "id": "28",
      "course": "fundamental-cs",
      "label": "آشنایی با آرایه‌ها",
      "number": 8,
      "question": "در آرایه‌های دوبعدی arr[2][3]، دارای چند سطر و چند ستون است؟",
      "options": [
        "۲ سطر و ۳ ستون",
        "۳ سطر و ۲ ستون",
        "۵ سطر",
        "ناشناخته است"
      ],
      "answer": 0
    },
    {
      "id": "29",
      "course": "fundamental-cs",
      "label": "آشنایی با آرایه‌ها",
      "number": 9,
      "question": "در زبان C، آرایه‌ها چه نوع داده‌ای را عمدتاً ذخیره می‌کنند؟",
      "options": [
        "هر نوع داده‌ای بدون محدودیت",
        "فقط اعداد اعشاری",
        "مقادیر با نوع داده یکسان",
        "رشته‌ها فقط"
      ],
      "answer": 2
    },
    {
      "id": "30",
      "course": "fundamental-cs",
      "label": "آشنایی با آرایه‌ها",
      "number": 10,
      "question": "کدام‌یک از دستورات زیر طول یک آرایه در زبان‌های برنامه‌نویسی را به دست می‌آورد؟",
      "options": [
        "length(arr)",
        "arr.length",
        "sizeof(arr)/sizeof(arr[0])",
        "count(arr)"
      ],
      "answer": 2
    },
    {
      "id": "31",
      "course": "fundamental-cs",
      "label": "آشنایی با ساختار داده",
      "number": 1,
      "question": "کدام مورد بهترین تعریف ساختار داده (Data Structure) است؟",
      "options": [
        "یک نوع متغیر در برنامه‌نویسی",
        "روشی برای سازماندهی و ذخیره اطلاعات",
        "یک جزء از سخت‌افزار",
        "یک دستور زبان برنامه‌نویسی"
      ],
      "answer": 1
    },
    {
      "id": "32",
      "course": "fundamental-cs",
      "label": "آشنایی با ساختار داده",
      "number": 2,
      "question": "کدام‌یک از گزینه‌ها جزء ساختار داده‌های خطی است؟",
      "options": [
        "درخت دودویی",
        "گراف",
        "پشته (Stack)",
        "هیپ (Heap)"
      ],
      "answer": 2
    },
    {
      "id": "33",
      "course": "fundamental-cs",
      "label": "آشنایی با ساختار داده",
      "number": 3,
      "question": "کدامیک از ساختار داده‌های زیر از اصل FIFO پیروی می‌کند؟",
      "options": [
        "پشته (Stack)",
        "صف (Queue)",
        "درخت (Tree)",
        "گراف (Graph)"
      ],
      "answer": 1
    },
    {
      "id": "34",
      "course": "fundamental-cs",
      "label": "آشنایی با ساختار داده",
      "number": 4,
      "question": "در ساختار داده پشته (Stack) عملیات حذف داده چگونه انجام می‌گیرد؟",
      "options": [
        "از ابتدای پشته",
        "از میانه پشته",
        "از انتهای پشته (آخرین عنصر)",
        "براساس شماره اندیس"
      ],
      "answer": 2
    },
    {
      "id": "35",
      "course": "fundamental-cs",
      "label": "آشنایی با ساختار داده",
      "number": 5,
      "question": "کدام گزینه برای پیمایش درخت دودویی صحیح است؟",
      "options": [
        "PreOrder",
        "PostOrder",
        "InOrder",
        "همه موارد"
      ],
      "answer": 3
    },
    {
      "id": "36",
      "course": "fundamental-cs",
      "label": "آشنایی با ساختار داده",
      "number": 6,
      "question": "در ساختار داده لیست پیوندی (Linked List)، هر عنصر شامل چه چیزی است؟",
      "options": [
        "فقط داده",
        "داده و اشاره‌گر به عنصر بعدی",
        "فقط اشاره‌گر",
        "فقط شماره اندیس"
      ],
      "answer": 1
    },
    {
      "id": "37",
      "course": "fundamental-cs",
      "label": "آشنایی با ساختار داده",
      "number": 7,
      "question": "کدام یک نمونه‌ای از ساختار داده غیرخطی است؟",
      "options": [
        "آرایه (Array)",
        "درخت (Tree)",
        "پشته (Stack)",
        "صف (Queue)"
      ],
      "answer": 1
    },
    {
      "id": "38",
      "course": "fundamental-cs",
      "label": "آشنایی با ساختار داده",
      "number": 8,
      "question": "فرآیند افزودن داده جدید در ابتدای صف (Queue) به چه نامی است؟",
      "options": [
        "Enqueue",
        "Dequeue",
        "Push",
        "Pop"
      ],
      "answer": 0
    },
    {
      "id": "39",
      "course": "fundamental-cs",
      "label": "آشنایی با ساختار داده",
      "number": 9,
      "question": "کدام گزینه درباره کاربرد ساختار داده صحیح است؟",
      "options": [
        "فقط برای ذخیره اعداد",
        "برای سرعت بخشیدن و آسان‌سازی عملیات بر روی داده‌ها",
        "فقط برای پایگاه داده",
        "تنها در زبان C"
      ],
      "answer": 1
    },
    {
      "id": "40",
      "course": "fundamental-cs",
      "label": "آشنایی با ساختار داده",
      "number": 10,
      "question": "در یک درخت دودویی جستجو (BST)، سمت چپ هر گره معمولاً چه ویژگی دارد؟",
      "options": [
        "ارزش بزرگتر از گره پدر",
        "ارزش کمتر یا مساوی گره پدر",
        "هیچ ویژگی خاصی ندارد",
        "ارزش دلخواه"
      ],
      "answer": 1
    },
    {
      "id": "41",
      "course": "fundamental-cs",
      "label": "آشنایی با لیست و کاربرد آن",
      "number": 1,
      "question": "لیست (List) در برنامه‌نویسی معمولاً برای چه کاربردی مورد استفاده قرار می‌گیرد؟",
      "options": [
        "ذخیره مجموعه‌ای از داده‌ها به صورت مرتب",
        "انجام محاسبات ریاضی",
        "تعریف متغیرهای تکی",
        "نمایش گرافیکی"
      ],
      "answer": 0
    },
    {
      "id": "42",
      "course": "fundamental-cs",
      "label": "آشنایی با لیست و کاربرد آن",
      "number": 2,
      "question": "کدام گزینه یک ویژگی مهم لیست پیوندی (Linked List) نسبت به آرایه است؟",
      "options": [
        "حذف و اضافه عناصر بدون جابجایی سایر عناصر",
        "سریع‌تر بودن جستجو",
        "ثابت بودن اندازه در تمام زمان‌ها",
        "عدم استفاده از اشاره‌گر"
      ],
      "answer": 0
    },
    {
      "id": "43",
      "course": "fundamental-cs",
      "label": "آشنایی با لیست و کاربرد آن",
      "number": 3,
      "question": "در لیست‌های پیوندی هر عنصر شامل چیست؟",
      "options": [
        "تنها مقدار داده",
        "فقط اشاره‌گر به عنصر بعدی",
        "مقدار داده و اشاره‌گر به عنصر بعدی",
        "یک اشاره‌گر به ابتدای لیست"
      ],
      "answer": 2
    },
    {
      "id": "44",
      "course": "fundamental-cs",
      "label": "آشنایی با لیست و کاربرد آن",
      "number": 4,
      "question": "کدام ساختار داده زیر نمونه‌ای از لیست نیست؟",
      "options": [
        "Single Linked List",
        "Double Linked List",
        "Circular Linked List",
        "Stack"
      ],
      "answer": 3
    },
    {
      "id": "45",
      "course": "fundamental-cs",
      "label": "آشنایی با لیست و کاربرد آن",
      "number": 5,
      "question": "افزودن یک عنصر جدید به انتهای لیست پیوندی چند عمل نیاز دارد؟",
      "options": [
        "تنها یک عمل",
        "دو عمل",
        "متناسب با طول لیست",
        "همیشه غیرممکن است"
      ],
      "answer": 2
    },
    {
      "id": "46",
      "course": "fundamental-cs",
      "label": "آشنایی با لیست و کاربرد آن",
      "number": 6,
      "question": "در کدام زبان برنامه‌نویسی، لیست یکی از ساختارهای اصلی برای ترکیب داده‌هاست؟",
      "options": [
        "Python",
        "Assembly",
        "HTML",
        "SQL"
      ],
      "answer": 0
    },
    {
      "id": "47",
      "course": "fundamental-cs",
      "label": "آشنایی با لیست و کاربرد آن",
      "number": 7,
      "question": "کدام گزینه درباره لیست‌های پویا صحیح است؟",
      "options": [
        "اندازه آن‌ها در طول زمان می‌تواند تغییر کند",
        "فقط داده عددی ذخیره می‌کنند",
        "همیشه اندازه ثابت دارند",
        "انعطاف ندارند"
      ],
      "answer": 0
    },
    {
      "id": "48",
      "course": "fundamental-cs",
      "label": "آشنایی با لیست و کاربرد آن",
      "number": 8,
      "question": "چرا لیست پیوندی نسبت به آرایه برای حذف عنصر مناسب‌تر است؟",
      "options": [
        "به خاطر عدم نیاز به جابجایی عناصر بعدی",
        "چون حافظه کمتری می‌گیرد",
        "چون فقط داده متنی قبول می‌کند",
        "حذف فقط از ابتدا ممکن است"
      ],
      "answer": 0
    },
    {
      "id": "49",
      "course": "fundamental-cs",
      "label": "آشنایی با لیست و کاربرد آن",
      "number": 9,
      "question": "کدام ساختار داده‌ای می‌تواند با استفاده از لیست پیاده‌سازی شود؟",
      "options": [
        "Stack",
        "Queue",
        "هر دو مورد",
        "هیچ‌کدام"
      ],
      "answer": 2
    },
    {
      "id": "50",
      "course": "fundamental-cs",
      "label": "آشنایی با لیست و کاربرد آن",
      "number": 10,
      "question": "کدام ویژگی لیست دابل (Doubly Linked List) را از لیست ساده متمایز می‌کند؟",
      "options": [
        "هر گره به عنصر بعدی و قبلی اشاره دارد",
        "فقط قابلیت درج در ابتدا دارد",
        "بدون اشاره‌گر است",
        "فقط داده عددی قبول می‌کند"
      ],
      "answer": 0
    },
    {
      "id": "51",
      "course": "fundamental-cs",
      "label": "الگوریتم چیست؟",
      "number": 1,
      "question": "کدام گزینه بهترین تعریف الگوریتم است؟",
      "options": [
        "یک نوع داده",
        "یک رشته دستورات منظم برای حل یک مسئله",
        "یک زبان برنامه‌نویسی",
        "یک نرم‌افزار کامپیوتری"
      ],
      "answer": 1
    },
    {
      "id": "52",
      "course": "fundamental-cs",
      "label": "الگوریتم چیست؟",
      "number": 2,
      "question": "کدام‌یک ویژگی مهم یک الگوریتم است؟",
      "options": [
        "باید قابل اجرا باشد",
        "باید همیشه به جواب برسد",
        "تعداد مراحل محدود داشته باشد",
        "همه موارد"
      ],
      "answer": 3
    },
    {
      "id": "53",
      "course": "fundamental-cs",
      "label": "الگوریتم چیست؟",
      "number": 3,
      "question": "اگر الگوریتمی نامحدود اجرا شود به چه معناست؟",
      "options": [
        "مسئله حل شده است",
        "الگوریتم صحیح است",
        "الگوریتم متوقف نمی‌شود و ممکن است مشکل داشته باشد",
        "زمان اجرای الگوریتم کوتاه است"
      ],
      "answer": 2
    },
    {
      "id": "54",
      "course": "fundamental-cs",
      "label": "الگوریتم چیست؟",
      "number": 4,
      "question": "کدام یک از موارد زیر مثال خوبی از الگوریتم است؟",
      "options": [
        "طرز تهیه چای به صورت مرحله به مرحله",
        "یک لیوان آب",
        "یک عدد تصادفی",
        "یک کامپیوتر"
      ],
      "answer": 0
    },
    {
      "id": "55",
      "course": "fundamental-cs",
      "label": "الگوریتم چیست؟",
      "number": 5,
      "question": "ورودی (Input) در یک الگوریتم به چه معناست؟",
      "options": [
        "دیتا یا مقداری که الگوریتم روی آن عمل می‌کند",
        "دستورالعمل اجرا",
        "یک روش خروجی گرفتن",
        "همراه داشتن خطا در کد"
      ],
      "answer": 0
    },
    {
      "id": "56",
      "course": "fundamental-cs",
      "label": "الگوریتم چیست؟",
      "number": 6,
      "question": "خروجی (Output) در یک الگوریتم به چه معناست؟",
      "options": [
        "داده نهایی پس از اجرای همه مراحل الگوریتم",
        "کد نویسنده الگوریتم",
        "دستورالعمل ورودی",
        "طول الگوریتم"
      ],
      "answer": 0
    },
    {
      "id": "57",
      "course": "fundamental-cs",
      "label": "الگوریتم چیست؟",
      "number": 7,
      "question": "کدام ویژگی زیر برای هر الگوریتم الزامی است؟",
      "options": [
        "قابل فهم بودن برای انسان یا ماشین",
        "بی‌انتها بودن مراحل آن",
        "وابسته بودن به زبان برنامه‌نویسی خاص",
        "همه موارد"
      ],
      "answer": 0
    },
    {
      "id": "58",
      "course": "fundamental-cs",
      "label": "الگوریتم چیست؟",
      "number": 8,
      "question": "فرض کنید الگوریتمی برای مرتب‌سازی لیست اعداد نوشته شده، به این الگوریتم چه نامی داده می‌شود؟",
      "options": [
        "الگوریتم جست‌وجو",
        "الگوریتم مرتب‌سازی",
        "الگوریتم کنترل خطا",
        "الگوریتم محاسبه مجموع"
      ],
      "answer": 1
    },
    {
      "id": "59",
      "course": "fundamental-cs",
      "label": "الگوریتم چیست؟",
      "number": 9,
      "question": "کدام زبان مخصوص برای نمایش الگوریتم‌ها متداول است؟",
      "options": [
        "زبان شبه‌کد (Pseudocode)",
        "HTML",
        "CSS",
        "SQL"
      ],
      "answer": 0
    },
    {
      "id": "60",
      "course": "fundamental-cs",
      "label": "الگوریتم چیست؟",
      "number": 10,
      "question": "هدف اصلی از نوشتن و استفاده از الگوریتم چیست؟",
      "options": [
        "حل دقیق و مرحله‌ای یک مسئله",
        "نوشتن نرم‌افزار زیبا",
        "افزایش مصرف حافظه",
        "افزایش پیچیدگی حل مسئله"
      ],
      "answer": 0
    },
    {
      "id": "61",
      "course": "fundamental-cs",
      "label": "برنامه‌نویسی ماژولار و مزایا",
      "number": 1,
      "question": "برنامه‌نویسی ماژولار چیست؟",
      "options": [
        "برنامه‌نویسی با استفاده از یک تابع بزرگ",
        "تقسیم برنامه به اجزای کوچک و مستقل به نام ماژول",
        "استفاده از حلقه‌ها برای کدنویسی",
        "برنامه‌نویسی فقط با زبان سطح بالا"
      ],
      "answer": 1
    },
    {
      "id": "62",
      "course": "fundamental-cs",
      "label": "برنامه‌نویسی ماژولار و مزایا",
      "number": 2,
      "question": "کدام یک از موارد زیر مزیت برنامه‌نویسی ماژولار است؟",
      "options": [
        "کاهش خوانایی برنامه",
        "افزایش قابلیت نگهداری",
        "افزایش پیچیدگی کد",
        "افزایش حجم کد"
      ],
      "answer": 1
    },
    {
      "id": "63",
      "course": "fundamental-cs",
      "label": "برنامه‌نویسی ماژولار و مزایا",
      "number": 3,
      "question": "در برنامه‌نویسی ماژولار، معمولاً هر ماژول چه ویژگی‌ای دارد؟",
      "options": [
        "وابستگی زیاد به سایر ماژول‌ها",
        "انجام یک وظیفه مشخص",
        "ذخیره‌سازی داده‌ها",
        "نداشتن نام مشخص"
      ],
      "answer": 1
    },
    {
      "id": "64",
      "course": "fundamental-cs",
      "label": "برنامه‌نویسی ماژولار و مزایا",
      "number": 4,
      "question": "کدام گزینه نمونه‌ای از ماژول در برنامه‌نویسی نیست؟",
      "options": [
        "تابع جمع دو عدد",
        "کلاس مدیریت کاربران",
        "یک کد بدون تقسیم‌بندی",
        "کتابخانه ریاضی"
      ],
      "answer": 2
    },
    {
      "id": "65",
      "course": "fundamental-cs",
      "label": "برنامه‌نویسی ماژولار و مزایا",
      "number": 5,
      "question": "کدام عبارت درباره برداشتن یا تغییر یک ماژول صحیح است؟",
      "options": [
        "معمولاً تاثیری روی سایر ماژول‌ها ندارد",
        "باعث حذف کل برنامه می‌شود",
        "نیاز به بازنویسی کل کد است",
        "برنامه اجرا نمی‌شود"
      ],
      "answer": 0
    },
    {
      "id": "66",
      "course": "fundamental-cs",
      "label": "برنامه‌نویسی ماژولار و مزایا",
      "number": 6,
      "question": "در برنامه‌نویسی ماژولار، ارتباط بین ماژول‌ها چگونه است؟",
      "options": [
        "از طریق رابط‌های مشخص و کنترل شده",
        "مستقیم و بدون کنترل",
        "نیاز به ارتباط ندارد",
        "همه داده‌ها به اشتراک گذاشته می‌شود"
      ],
      "answer": 0
    },
    {
      "id": "67",
      "course": "fundamental-cs",
      "label": "برنامه‌نویسی ماژولار و مزایا",
      "number": 7,
      "question": "کدام زبان برنامه‌نویسی از مفهوم ماژول‌ها پشتیبانی می‌کند؟",
      "options": [
        "Python",
        "Java",
        "C++",
        "همه گزینه‌ها"
      ],
      "answer": 3
    },
    {
      "id": "68",
      "course": "fundamental-cs",
      "label": "برنامه‌نویسی ماژولار و مزایا",
      "number": 8,
      "question": "کدام مورد نمونه‌ای از تجزیه برنامه به ماژول‌های کوچکتر نیست؟",
      "options": [
        "تعریف توابع مجزا برای هر وظیفه",
        "نوشتن کل برنامه در یک تابع اصلی",
        "استفاده از کلاس‌ها برای هر بخش",
        "تقسیم‌بندی کد به فایل‌های جداگانه"
      ],
      "answer": 1
    },
    {
      "id": "69",
      "course": "fundamental-cs",
      "label": "برنامه‌نویسی ماژولار و مزایا",
      "number": 9,
      "question": "کدام مزیت باعث محبوبیت برنامه‌نویسی ماژولار در پروژه‌های بزرگ می‌شود؟",
      "options": [
        "افزایش خطاها",
        "تسهیل تست، نگهداری و توسعه",
        "کاهش استفاده مجدد",
        "پیچیده کردن عیب‌یابی"
      ],
      "answer": 1
    },
    {
      "id": "70",
      "course": "fundamental-cs",
      "label": "برنامه‌نویسی ماژولار و مزایا",
      "number": 10,
      "question": "به کدام روش می‌توان یک برنامه ماژولار را گسترش داد؟",
      "options": [
        "افزودن ماژول جدید بدون نیاز به تغییرات اساسی",
        "بازنویسی کل برنامه",
        "حذف ماژول‌های قبلی",
        "غیرممکن است"
      ],
      "answer": 0
    },
    {
      "id": "71",
      "course": "fundamental-cs",
      "label": "تعریف و استفاده از توابع",
      "number": 1,
      "question": "تابع (Function) در برنامه‌نویسی چیست؟",
      "options": [
        "یک نوع متغیر",
        "بخشی از کد که برای انجام یک کار خاص تعریف می‌شود",
        "یک حلقه تکرار",
        "یک کلاس آبجکت‌گرا"
      ],
      "answer": 1
    },
    {
      "id": "72",
      "course": "fundamental-cs",
      "label": "تعریف و استفاده از توابع",
      "number": 2,
      "question": "هدف اصلی تعریف تابع در برنامه چیست؟",
      "options": [
        "جلوگیری از تکرار کد",
        "افزایش حجم کد",
        "ایجاد خطا در برنامه",
        "افزودن کامنت"
      ],
      "answer": 0
    },
    {
      "id": "73",
      "course": "fundamental-cs",
      "label": "تعریف و استفاده از توابع",
      "number": 3,
      "question": "ورودی‌های یک تابع هنگام فراخوانی چه نام دارند؟",
      "options": [
        "خروجی‌ها",
        "پارامترها (Arguments)",
        "کتابخانه‌ها",
        "نوع متغیر"
      ],
      "answer": 1
    },
    {
      "id": "74",
      "course": "fundamental-cs",
      "label": "تعریف و استفاده از توابع",
      "number": 4,
      "question": "کدام گزینه زیر درباره استفاده از چندین بار یک تابع صحیح است؟",
      "options": [
        "تابع فقط یک بار استفاده می‌شود",
        "می‌توان یک تابع را بارها و با ورودی‌های مختلف فراخوانی کرد",
        "همیشه خطا می‌دهد",
        "تابع فقط در ابتدای برنامه قابل استفاده است"
      ],
      "answer": 1
    },
    {
      "id": "75",
      "course": "fundamental-cs",
      "label": "تعریف و استفاده از توابع",
      "number": 5,
      "question": "کدام گزینه مثالی از تعریف تابع در پایتون است؟",
      "options": [
        "loop while()",
        "def my_func():",
        "int myVar = 5;",
        "class Student:"
      ],
      "answer": 1
    },
    {
      "id": "76",
      "course": "fundamental-cs",
      "label": "تعریف و استفاده از توابع",
      "number": 6,
      "question": "برای بازگرداندن یک مقدار از تابع چه دستوری معمولاً استفاده می‌شود؟",
      "options": [
        "input",
        "return",
        "print",
        "break"
      ],
      "answer": 1
    },
    {
      "id": "77",
      "course": "fundamental-cs",
      "label": "تعریف و استفاده از توابع",
      "number": 7,
      "question": "نام تابع در برنامه باید چگونه باشد؟",
      "options": [
        "اختیاری و بدون محدودیت",
        "مناسب، معنادار و یکتا در همان محدوده تعریف تابع",
        "همیشه با عدد شروع شود",
        "با فاصله نوشته شود"
      ],
      "answer": 1
    },
    {
      "id": "78",
      "course": "fundamental-cs",
      "label": "تعریف و استفاده از توابع",
      "number": 8,
      "question": "کدام مورد درباره پارامتر تابع صحیح است؟",
      "options": [
        "همیشه باید خالی باشد",
        "خود برنامه مقدار آن را تعیین می‌کند",
        "ورودی مورد نیاز تابع است",
        "فقط برای چاپ خروجی به کار می‌رود"
      ],
      "answer": 2
    },
    {
      "id": "79",
      "course": "fundamental-cs",
      "label": "تعریف و استفاده از توابع",
      "number": 9,
      "question": "در کدام حالت تابع هیچ مقداری باز نمی‌گرداند؟",
      "options": [
        "هنگام استفاده از دستور return بدون مقدار",
        "وقتی حلقه استفاده می‌شود",
        "زمانی که خطا وجود دارد",
        "اگر پارامتر ورودی داده نشود"
      ],
      "answer": 0
    },
    {
      "id": "80",
      "course": "fundamental-cs",
      "label": "تعریف و استفاده از توابع",
      "number": 10,
      "question": "اصطلاح 'فراخوانی تابع' چیست؟",
      "options": [
        "تعریف تابع جدید",
        "استفاده و اجرای یک تابع در برنامه",
        "ثبت نام کاربر",
        "کامپایل برنامه"
      ],
      "answer": 1
    },
    {
      "id": "81",
      "course": "fundamental-cs",
      "label": "حلقه‌ها (for, while, do-while)",
      "number": 1,
      "question": "حلقه چیست؟",
      "options": [
        "بخشی از کد که تنها یک بار اجرا می‌شود",
        "بخشی از کد که باعث تکرار اجرای یک یا چند دستور می‌شود",
        "یک متغیر خاص",
        "یک نوع داده ترکیبی"
      ],
      "answer": 1
    },
    {
      "id": "82",
      "course": "fundamental-cs",
      "label": "حلقه‌ها (for, while, do-while)",
      "number": 2,
      "question": "در حلقه for کدام سه بخش اساسی وجود دارد؟",
      "options": [
        "تعریف متغیر، نمایش خروجی، پایان برنامه",
        "مقداردهی اولیه، شرط ادامه، به‌روزرسانی مقدار",
        "ورودی خروجی، تعریف آرایه، تابع",
        "عبارت شرطی، نوع تابع، نوع داده"
      ],
      "answer": 1
    },
    {
      "id": "83",
      "course": "fundamental-cs",
      "label": "حلقه‌ها (for, while, do-while)",
      "number": 3,
      "question": "حلقه while تا زمانی ادامه پیدا می‌کند که ...؟",
      "options": [
        "شرط حلقه درست باشد",
        "یک بار اجرا شود",
        "همیشه نادرست باشد",
        "مقداردهی اولیه انجام شود"
      ],
      "answer": 0
    },
    {
      "id": "84",
      "course": "fundamental-cs",
      "label": "حلقه‌ها (for, while, do-while)",
      "number": 4,
      "question": "تفاوت اصلی بین حلقه while و do-while چیست؟",
      "options": [
        "حلقه while حتماً یک بار اجرا می‌شود",
        "حلقه do-while حداقل یک بار اجرا می‌شود",
        "در do-while اصلاً شرط وجود ندارد",
        "در while نمی‌توان مقداردهی اولیه انجام داد"
      ],
      "answer": 1
    },
    {
      "id": "85",
      "course": "fundamental-cs",
      "label": "حلقه‌ها (for, while, do-while)",
      "number": 5,
      "question": "کدام شکلِ نوشتاری مربوط به حلقه for است؟",
      "options": [
        "for (i=0; i<5; i++) { ... }",
        "while (i<5) { ... }",
        "do { ... } while (i<5);",
        "if (i<5) { ... }"
      ],
      "answer": 0
    },
    {
      "id": "86",
      "course": "fundamental-cs",
      "label": "حلقه‌ها (for, while, do-while)",
      "number": 6,
      "question": "خروج از حلقه قبل از پایان شرط با چه دستوری در بیشتر زبان‌ها ممکن است؟",
      "options": [
        "continue",
        "exit",
        "break",
        "stop"
      ],
      "answer": 2
    },
    {
      "id": "87",
      "course": "fundamental-cs",
      "label": "حلقه‌ها (for, while, do-while)",
      "number": 7,
      "question": "اگر شرط حلقه while از ابتدا نادرست باشد، چه می‌شود؟",
      "options": [
        "بدون اجرا خاتمه می‌یابد",
        "یک بار اجرا می‌شود",
        "تا بینهایت اجرا می‌شود",
        "خطای نحوی می‌دهد"
      ],
      "answer": 0
    },
    {
      "id": "88",
      "course": "fundamental-cs",
      "label": "حلقه‌ها (for, while, do-while)",
      "number": 8,
      "question": "کدام گزینه زیر حلقه بی‌نهایت (Infinite Loop) را در C++ ایجاد می‌کند؟",
      "options": [
        "for(;;) { ... }",
        "for(i=0; i<10; i++) { ... }",
        "while (i>10) { ... }",
        "if (true) { ... }"
      ],
      "answer": 0
    },
    {
      "id": "89",
      "course": "fundamental-cs",
      "label": "حلقه‌ها (for, while, do-while)",
      "number": 9,
      "question": "کدام گزینه درباره استفاده از حلقه تو در تو درست است؟",
      "options": [
        "در هر حلقه می‌توان حلقه دیگری قرار داد",
        "فقط یک حلقه مجاز است",
        "در while این کار شدنی نیست",
        "در do-while فقط ممکن است"
      ],
      "answer": 0
    },
    {
      "id": "90",
      "course": "fundamental-cs",
      "label": "حلقه‌ها (for, while, do-while)",
      "number": 10,
      "question": "در کدام حالت حلقه تکرار، شرط بعد از انجام دستورات حللقه بررسی می‌شود؟",
      "options": [
        "for",
        "while",
        "do-while",
        "if"
      ],
      "answer": 2
    },
    {
      "id": "91",
      "course": "fundamental-cs",
      "label": "خواندن و نوشتن داده",
      "number": 1,
      "question": "ورودی (input) در برنامه‌نویسی به چه معناست؟",
      "options": [
        "ارسال داده از برنامه به بیرون",
        "دریافت داده از کاربر یا منابع دیگر به داخل برنامه",
        "ذخیره فایل",
        "نمایش خروجی"
      ],
      "answer": 1
    },
    {
      "id": "92",
      "course": "fundamental-cs",
      "label": "خواندن و نوشتن داده",
      "number": 2,
      "question": "برای دریافت ورودی کاربر در زبان پایتون از کدام دستور استفاده می‌شود؟",
      "options": [
        "scan()",
        "read()",
        "input()",
        "write()"
      ],
      "answer": 2
    },
    {
      "id": "93",
      "course": "fundamental-cs",
      "label": "خواندن و نوشتن داده",
      "number": 3,
      "question": "برای نمایش خروجی در زبان پایتون معمولاً از چه دستوری استفاده می‌شود؟",
      "options": [
        "show()",
        "output()",
        "input()",
        "print()"
      ],
      "answer": 3
    },
    {
      "id": "94",
      "course": "fundamental-cs",
      "label": "خواندن و نوشتن داده",
      "number": 4,
      "question": "عملیات 'خواندن داده' از فایل چیست؟",
      "options": [
        "ذخیره مقدار جدید در فایل",
        "گرفتن ورودی از کاربر",
        "دریافت اطلاعات ذخیره شده در فایل",
        "نمایش اطلاعات بر روی صفحه"
      ],
      "answer": 2
    },
    {
      "id": "95",
      "course": "fundamental-cs",
      "label": "خواندن و نوشتن داده",
      "number": 5,
      "question": "کدام گزینه معادل نوشتن داده در یک فایل متنی است؟",
      "options": [
        "ذخیره متن در حافظه RAM",
        "افزودن یا جایگزینی محتوا در فایل متن",
        "خواندن ورودی از کنسول",
        "دریافت فرمت خروجی"
      ],
      "answer": 1
    },
    {
      "id": "96",
      "course": "fundamental-cs",
      "label": "خواندن و نوشتن داده",
      "number": 6,
      "question": "در کدام حالت، داده‌ها دیگر پس از بستن برنامه باقی نمی‌مانند؟",
      "options": [
        "وقتی در متغیر ذخیره شده باشند",
        "وقتی روی حافظه دائمی نوشته شوند",
        "هنگام ذخیره در فایل",
        "هنگام خروجی گرفتن"
      ],
      "answer": 0
    },
    {
      "id": "97",
      "course": "fundamental-cs",
      "label": "خواندن و نوشتن داده",
      "number": 7,
      "question": "خواندن داده از کاربر و ذخیره آن در یک متغیر چه فایده‌ای دارد؟",
      "options": [
        "امکان استفاده مجدد از داده در برنامه",
        "باعث توقف برنامه می‌شود",
        "باعث حذف داده قبلی می‌شود",
        "فقط برای نمایش داده استفاده می‌شود"
      ],
      "answer": 0
    },
    {
      "id": "98",
      "course": "fundamental-cs",
      "label": "خواندن و نوشتن داده",
      "number": 8,
      "question": "برای نوشتن داده در فایل متنی در زبان Python از چه روشی استفاده می‌شود؟",
      "options": [
        "open(filename, 'w')",
        "scan(filename)",
        "print(filename, 'r')",
        "input(filename, 'w')"
      ],
      "answer": 0
    },
    {
      "id": "99",
      "course": "fundamental-cs",
      "label": "خواندن و نوشتن داده",
      "number": 9,
      "question": "فرق حالت 'w' و 'a' در بازکردن فایل متنی چیست؟",
      "options": [
        "'w' فقط خواندن، 'a' فقط خواندن",
        "'w' اضافه می‌کند، 'a' پاک می‌کند",
        "'w' فایل جدید ایجاد و قبلی را پاک می‌کند، 'a' به انتهای فایل اضافه می‌کند",
        "هر دو فقط برای خواندن فایل‌های دودویی هستند"
      ],
      "answer": 2
    },
    {
      "id": "100",
      "course": "fundamental-cs",
      "label": "خواندن و نوشتن داده",
      "number": 10,
      "question": "کدام جمله درباره خروجی برنامه درست است؟",
      "options": [
        "خروجی همیشه به صورت فایل است",
        "خروجی فقط روی صفحه نمایش ظاهر می‌شود",
        "خروجی می‌تواند روی صفحه یا فایل ذخیره شود",
        "برنامه نمی‌تواند خروجی تولید کند"
      ],
      "answer": 2
    },
    {
      "id": "101",
      "course": "fundamental-cs",
      "label": "دستورات شرطی (if, else, switch)",
      "number": 1,
      "question": "دستور شرطی if در برنامه‌نویسی چه کاربردی دارد؟",
      "options": [
        "برای ایجاد حلقه تکرار استفاده می‌شود",
        "اجازه می‌دهد اجرای برنامه براساس یک شرط انجام شود یا خیر",
        "فقط برای تعریف متغیر به کار می‌رود",
        "برای خروج از برنامه است"
      ],
      "answer": 1
    },
    {
      "id": "102",
      "course": "fundamental-cs",
      "label": "دستورات شرطی (if, else, switch)",
      "number": 2,
      "question": "عبارت else بعد از if کاربردش چیست؟",
      "options": [
        "اجرای دستور در صورت برقرار بودن شرط if",
        "اجرای دستور در صورت برقرار نبودن شرط if",
        "همیشه اجرا می‌شود",
        "در حلقه for استفاده می‌شود"
      ],
      "answer": 1
    },
    {
      "id": "103",
      "course": "fundamental-cs",
      "label": "دستورات شرطی (if, else, switch)",
      "number": 3,
      "question": "کدام گزینه ساختار صحیح استفاده از if در پایتون را نشان می‌دهد؟",
      "options": [
        "if (a == b) then",
        "if a == b:",
        "if a=b then",
        "if: a==b"
      ],
      "answer": 1
    },
    {
      "id": "104",
      "course": "fundamental-cs",
      "label": "دستورات شرطی (if, else, switch)",
      "number": 4,
      "question": "کدام گزینه درباره elif در پایتون صحیح است؟",
      "options": [
        "مشابه else-if در سایر زبان‌هاست",
        "دستور چاپ اطلاعات است",
        "یک نوع حلقه است",
        "فقط در switch-case استفاده می‌شود"
      ],
      "answer": 0
    },
    {
      "id": "105",
      "course": "fundamental-cs",
      "label": "دستورات شرطی (if, else, switch)",
      "number": 5,
      "question": "در کدام زبان برنامه‌نویسی دستور switch برای انتخاب بین چند گزینه استفاده می‌شود؟",
      "options": [
        "Python",
        "C++",
        "HTML",
        "CSS"
      ],
      "answer": 1
    },
    {
      "id": "106",
      "course": "fundamental-cs",
      "label": "دستورات شرطی (if, else, switch)",
      "number": 6,
      "question": "کدام گزینه قطعه کد صحیح switch-case در C++ است؟",
      "options": [
        "switch (n) { case 1: ... break; }",
        "case (n) { switch 1: ... break; }",
        "if (n==1) then ...",
        "switch n { case 1: ... break; }"
      ],
      "answer": 0
    },
    {
      "id": "107",
      "course": "fundamental-cs",
      "label": "دستورات شرطی (if, else, switch)",
      "number": 7,
      "question": "چه زمانی از دستور شرطی استفاده می‌شود؟",
      "options": [
        "وقتی می‌خواهیم برنامه فقط یک مسیر ثابت را اجرا کند",
        "برای ایجاد انتخاب یا تصمیم‌گیری در برنامه",
        "فقط برای خواندن داده",
        "فقط برای نمایش خروجی"
      ],
      "answer": 1
    },
    {
      "id": "108",
      "course": "fundamental-cs",
      "label": "دستورات شرطی (if, else, switch)",
      "number": 8,
      "question": "وجود چندین if پشت سرهم چه امکانی می‌دهد؟",
      "options": [
        "برنامه فقط اولین if را بررسی می‌کند",
        "برنامه می‌تواند شرایط مختلف را جداگانه بررسی کند",
        "باعث خطا در برنامه می‌شود",
        "اجرای حلقه بی‌نهایت"
      ],
      "answer": 1
    },
    {
      "id": "109",
      "course": "fundamental-cs",
      "label": "دستورات شرطی (if, else, switch)",
      "number": 9,
      "question": "اگر هیچ‌کدام از شرط‌های if و elif برقرار نباشد، کدام بخش اجرا می‌شود؟",
      "options": [
        "if",
        "elif",
        "else",
        "switch"
      ],
      "answer": 2
    },
    {
      "id": "110",
      "course": "fundamental-cs",
      "label": "دستورات شرطی (if, else, switch)",
      "number": 10,
      "question": "مزیت اصلی استفاده از switch نسبت به if-else چیست؟",
      "options": [
        "کوتاه‌تر و خواناتر شدن کد هنگام انتخاب بین چند مقدار ثابت",
        "کاهش سرعت اجرا",
        "بالا بردن پیچیدگی کد",
        "فقط برای متغیرهای رشته‌ای قابل استفاده است"
      ],
      "answer": 0
    },
    {
      "id": "111",
      "course": "fundamental-cs",
      "label": "رایج‌ترین خطاهای مبتدیان و شیوه حل آن‌ها",
      "number": 1,
      "question": "کدامیک یک خطای سینتکسی (Syntax Error) است؟",
      "options": [
        "استفاده از متغیر بدون مقداردهی اولیه",
        "فراموش‌کردن نوشتن دو نقطه بعد از if در پایتون",
        "استفاده از حلقه‌های تو در تو",
        "استفاده از نوع داده صحیح"
      ],
      "answer": 1
    },
    {
      "id": "112",
      "course": "fundamental-cs",
      "label": "رایج‌ترین خطاهای مبتدیان و شیوه حل آن‌ها",
      "number": 2,
      "question": "خطای 'NameError' در پایتون به چه دلیل رخ می‌دهد؟",
      "options": [
        "استفاده از متغیر قبل از تعریف آن",
        "استفاده از شرط اشتباه",
        "تکرار بیش از حد حلقه‌ها",
        "کمبود حافظه"
      ],
      "answer": 0
    },
    {
      "id": "113",
      "course": "fundamental-cs",
      "label": "رایج‌ترین خطاهای مبتدیان و شیوه حل آن‌ها",
      "number": 3,
      "question": "برای رفع خطای 'IndentationError' در پایتون باید:",
      "options": [
        "پرانتزها را حذف کنیم",
        "از فاصله‌گذاری صحیح و یکسان در ابتدای خطوط استفاده کنیم",
        "فقط از نقطه‌ویرگول استفاده کنیم",
        "همه کدها را در یک خط بنویسیم"
      ],
      "answer": 1
    },
    {
      "id": "114",
      "course": "fundamental-cs",
      "label": "رایج‌ترین خطاهای مبتدیان و شیوه حل آن‌ها",
      "number": 4,
      "question": "خطای 'IndexError' هنگام کار با آرایه‌ها یا لیست‌ها معمولاً به دلیل چیست؟",
      "options": [
        "دسترسی به اندیسی خارج از بازه",
        "استفاده از نوع داده متفاوت",
        "استفاده از شرط نادرست",
        "استفاده از else به جای elif"
      ],
      "answer": 0
    },
    {
      "id": "115",
      "course": "fundamental-cs",
      "label": "رایج‌ترین خطاهای مبتدیان و شیوه حل آن‌ها",
      "number": 5,
      "question": "برای جلوگیری از خطای تقسیم بر صفر (ZeroDivisionError) باید:",
      "options": [
        "از دستور print استفاده کرد",
        "قبل از انجام تقسیم، بررسی کرد مخرج صفر نباشد",
        "داده را از کاربر نگرفت",
        "از حلقه بی‌نهایت استفاده کرد"
      ],
      "answer": 1
    },
    {
      "id": "116",
      "course": "fundamental-cs",
      "label": "رایج‌ترین خطاهای مبتدیان و شیوه حل آن‌ها",
      "number": 6,
      "question": "وقتی برنامه اجرا می‌شود اما نتیجه‌ای چاپ نمی‌شود، اغلب مشکل در کدام مرحله است؟",
      "options": [
        "ورودی اشتباه یا نبود دستورات print",
        "عدم تعریف فانکشن",
        "وجود حلقه بی‌نهایت",
        "استفاده از نوع داده اشتباه"
      ],
      "answer": 0
    },
    {
      "id": "117",
      "course": "fundamental-cs",
      "label": "رایج‌ترین خطاهای مبتدیان و شیوه حل آن‌ها",
      "number": 7,
      "question": "فراموش کردن استفاده از پرانتزها هنگام فراخوانی تابع چه خطایی ایجاد می‌کند؟",
      "options": [
        "تابع اجرا نمی‌شود و مقدار تابع بازگردانده می‌شود",
        "SyntaxError",
        "NameError",
        "IndexError"
      ],
      "answer": 0
    },
    {
      "id": "118",
      "course": "fundamental-cs",
      "label": "رایج‌ترین خطاهای مبتدیان و شیوه حل آن‌ها",
      "number": 8,
      "question": "برای رفع خطای TypeError هنگام جمع عدد و رشته، چه باید کرد؟",
      "options": [
        "عدد را به رشته یا بالعکس تبدیل کنیم",
        "از حلقه استفاده کنیم",
        "دستور شرطی بنویسیم",
        "هیچ‌کاری انجام ندهیم"
      ],
      "answer": 0
    },
    {
      "id": "119",
      "course": "fundamental-cs",
      "label": "رایج‌ترین خطاهای مبتدیان و شیوه حل آن‌ها",
      "number": 9,
      "question": "خطای 'FileNotFoundError' زمانی رخ می‌دهد که:",
      "options": [
        "فایل با نام یا مسیر داده‌شده وجود نداشته باشد",
        "داده اشتباه وارد شود",
        "مقدار متغیر زیاد شود",
        "نوع داده نادرست باشد"
      ],
      "answer": 0
    },
    {
      "id": "120",
      "course": "fundamental-cs",
      "label": "رایج‌ترین خطاهای مبتدیان و شیوه حل آن‌ها",
      "number": 10,
      "question": "برای عیب‌یابی سریع‌تر خطاها در برنامه چه روشی پیشنهاد می‌شود؟",
      "options": [
        "استفاده از print برای مشاهده مقدار متغیرها و مراحل اجرای کد",
        "افزودن حلقه بی‌نهایت",
        "استفاده نکردن از شرط‌ها",
        "نوشتن کد بدون فاصله‌گذاری"
      ],
      "answer": 0
    },
    {
      "id": "121",
      "course": "fundamental-cs",
      "label": "روش‌های نمایش داده (کدینگ، کد Gray، کد ASCII)",
      "number": 1,
      "question": "کدام گزینه بهترین تعریف برای «کدینگ» داده‌ها در کامپیوتر است؟",
      "options": [
        "اجرای برنامه با سرعت بیشتر",
        "تبدیل داده‌ها به اشکال قابل ذخیره یا انتقال توسط کامپیوتر",
        "پاک‌کردن داده‌های اضافی",
        "ذخیره داده‌ها بدون تغییر"
      ],
      "answer": 1
    },
    {
      "id": "122",
      "course": "fundamental-cs",
      "label": "روش‌های نمایش داده (کدینگ، کد Gray، کد ASCII)",
      "number": 2,
      "question": "کد Gray چه ویژگی مهمی دارد؟",
      "options": [
        "در هر تغییر فقط یک بیت تغییر می‌کند",
        "تنها برای نمایش کاراکترها است",
        "دارای مقدار اعشاری است",
        "هر دو بیت اول همیشه برابرند"
      ],
      "answer": 0
    },
    {
      "id": "123",
      "course": "fundamental-cs",
      "label": "روش‌های نمایش داده (کدینگ، کد Gray، کد ASCII)",
      "number": 3,
      "question": "کد ASCII عمدتاً برای چه کاربردی استفاده می‌شود؟",
      "options": [
        "رمزنگاری داده",
        "نمایش اعداد اعشاری",
        "نمایش و انتقال علائم و کاراکترها در کامپیوتر",
        "تبدیل اعداد باینری به ده‌دهی"
      ],
      "answer": 2
    },
    {
      "id": "124",
      "course": "fundamental-cs",
      "label": "روش‌های نمایش داده (کدینگ، کد Gray، کد ASCII)",
      "number": 4,
      "question": "کد ASCII برای نمایش چند کاراکتر استاندارد طراحی شده است؟",
      "options": [
        "۲۵۶ کاراکتر",
        "۶۴ کاراکتر",
        "۱۲۸ کاراکتر",
        "۱۰ کاراکتر"
      ],
      "answer": 2
    },
    {
      "id": "125",
      "course": "fundamental-cs",
      "label": "روش‌های نمایش داده (کدینگ، کد Gray، کد ASCII)",
      "number": 5,
      "question": "در کدینگ داده‌ها منظور از 'بیت' چیست؟",
      "options": [
        "کوچکترین واحد داده دیجیتال",
        "یک کاراکتر الفبا",
        "یک عدد اعشاری",
        "یک کد خطا"
      ],
      "answer": 0
    },
    {
      "id": "126",
      "course": "fundamental-cs",
      "label": "روش‌های نمایش داده (کدینگ، کد Gray، کد ASCII)",
      "number": 6,
      "question": "ویژگی اصلی کد Gray در سیستم‌های دیجیتال چیست؟",
      "options": [
        "کاهش خطا هنگام انتقال وضعیت",
        "افزایش سرعت محاسبات",
        "امکان نمایش حروف انگلیسی",
        "حذف صفرهای غیرضروری"
      ],
      "answer": 0
    },
    {
      "id": "127",
      "course": "fundamental-cs",
      "label": "روش‌های نمایش داده (کدینگ، کد Gray، کد ASCII)",
      "number": 7,
      "question": "عدد دودویی ۱۱۰ در کد Gray به چه صورت نمایش داده می‌شود؟",
      "options": [
        "۱۰۱",
        "۱۱۰",
        "۱۰۰",
        "۱۱۱"
      ],
      "answer": 0
    },
    {
      "id": "128",
      "course": "fundamental-cs",
      "label": "روش‌های نمایش داده (کدینگ، کد Gray، کد ASCII)",
      "number": 8,
      "question": "در کد ASCII، مقدار عددی کاراکتر 'A' چیست؟",
      "options": [
        "۹۷",
        "۶۵",
        "۴۸",
        "۷۳"
      ],
      "answer": 1
    },
    {
      "id": "129",
      "course": "fundamental-cs",
      "label": "روش‌های نمایش داده (کدینگ، کد Gray، کد ASCII)",
      "number": 9,
      "question": "چرا در برخی سیستم‌ها به جای کد دودویی ساده از کد Gray استفاده می‌شود؟",
      "options": [
        "برای پیچیده‌تر شدن کدنگاری",
        "برای کاهش خطا هنگام انتقال بین وضعیت‌ها",
        "برای صرفه‌جویی در حافظه",
        "برای خواندن راحت‌تر توسط انسان"
      ],
      "answer": 1
    },
    {
      "id": "130",
      "course": "fundamental-cs",
      "label": "روش‌های نمایش داده (کدینگ، کد Gray، کد ASCII)",
      "number": 10,
      "question": "کدام مورد یک کدینگ کاراکتر معروف در کامپیوتر است؟",
      "options": [
        "کد ASCII",
        "کد باینری",
        "کد هگزا",
        "کد تزریق"
      ],
      "answer": 0
    },
    {
      "id": "131",
      "course": "fundamental-cs",
      "label": "سیستم‌های عددی و تبدیل مبناها",
      "number": 1,
      "question": "کدام گزینه نشان‌دهنده‌ی صحیح سیستم اعداد دودویی (Binary) است؟",
      "options": [
        "شامل فقط ارقام ۰ و ۱",
        "از ارقام ۰ تا ۳ تشکیل شده است",
        "شامل حروف الفبا نیز می‌شود",
        "شامل ارقام ۰ تا ۹ است"
      ],
      "answer": 0
    },
    {
      "id": "132",
      "course": "fundamental-cs",
      "label": "سیستم‌های عددی و تبدیل مبناها",
      "number": 2,
      "question": "عدد ۱۳ در مبنای ده، معادل کدام عدد در مبنای دودویی است؟",
      "options": [
        "۱۱۰۰",
        "۱۱۰۱",
        "۱۰۱۱",
        "۱۰۰۱"
      ],
      "answer": 1
    },
    {
      "id": "133",
      "course": "fundamental-cs",
      "label": "سیستم‌های عددی و تبدیل مبناها",
      "number": 3,
      "question": "مبنای هگزادسیمال (Hexadecimal) بر چه اساسی ساخته شده است؟",
      "options": [
        "بر اساس ۲",
        "بر اساس ۸",
        "بر اساس ۱۰",
        "بر اساس ۱۶"
      ],
      "answer": 3
    },
    {
      "id": "134",
      "course": "fundamental-cs",
      "label": "سیستم‌های عددی و تبدیل مبناها",
      "number": 4,
      "question": "عدد ۱۰۰۱ در مبنای دودویی، برابر کدام عدد در مبنای ده‌دهی است؟",
      "options": [
        "۳",
        "۵",
        "۹",
        "۱۰"
      ],
      "answer": 2
    },
    {
      "id": "135",
      "course": "fundamental-cs",
      "label": "سیستم‌های عددی و تبدیل مبناها",
      "number": 5,
      "question": "در سیستم عددی اکتال (Octal) از چه ارقامی استفاده می‌شود؟",
      "options": [
        "۰ تا ۹",
        "۰ تا ۷",
        "۰ تا ۵",
        "۰ تا ۳"
      ],
      "answer": 1
    },
    {
      "id": "136",
      "course": "fundamental-cs",
      "label": "سیستم‌های عددی و تبدیل مبناها",
      "number": 6,
      "question": "حاصل تبدیل عدد ۲۵ در مبنای ده‌دهی به مبنای دودویی چیست؟",
      "options": [
        "۱۱۰۰۱",
        "۱۱۰۰",
        "۱۰۱۱۰",
        "۱۰۱۰"
      ],
      "answer": 0
    },
    {
      "id": "137",
      "course": "fundamental-cs",
      "label": "سیستم‌های عددی و تبدیل مبناها",
      "number": 7,
      "question": "حرف 'A' در سیستم هگزادسیمال معادل چه عددی در ده‌دهی است؟",
      "options": [
        "۸",
        "۱۰",
        "۱۲",
        "۱۶"
      ],
      "answer": 1
    },
    {
      "id": "138",
      "course": "fundamental-cs",
      "label": "سیستم‌های عددی و تبدیل مبناها",
      "number": 8,
      "question": "کدام گزینه معادل عدد دودویی ۱۱۱۰ در مبنای هگزادسیمال است؟",
      "options": [
        "A",
        "B",
        "C",
        "E"
      ],
      "answer": 3
    },
    {
      "id": "139",
      "course": "fundamental-cs",
      "label": "سیستم‌های عددی و تبدیل مبناها",
      "number": 9,
      "question": "برای تبدیل یک عدد از مبنای ۸ به مبنای ۲، چه روشی ساده‌تر است؟",
      "options": [
        "جایگزینی هر رقم اکتال با سه رقم دودویی معادل",
        "تبدیل مستقیم به هگزادسیمال",
        "تقسیم به عددهای کوچکتر",
        "تبدیل ابتدا به مبنای ده‌دهی سپس به مبنای ۲"
      ],
      "answer": 0
    },
    {
      "id": "140",
      "course": "fundamental-cs",
      "label": "سیستم‌های عددی و تبدیل مبناها",
      "number": 10,
      "question": "عدد ۱F در سیستم هگزادسیمال، معادل کدام عدد در مبنای ده‌دهی است؟",
      "options": [
        "۳۱",
        "۲۵",
        "۱۵",
        "۲۱"
      ],
      "answer": 0
    },
    {
      "id": "141",
      "course": "fundamental-cs",
      "label": "فلوچارت و نمادهای آن",
      "number": 1,
      "question": "کدام نماد در فلوچارت برای نشان دادن شروع یا پایان برنامه استفاده می‌شود؟",
      "options": [
        "مستطیل",
        "بیضی",
        "لوزی",
        "موازی‌الأضلاع"
      ],
      "answer": 1
    },
    {
      "id": "142",
      "course": "fundamental-cs",
      "label": "فلوچارت و نمادهای آن",
      "number": 2,
      "question": "نماد مستطیل در فلوچارت بیانگر چه عملی است؟",
      "options": [
        "شروع یا پایان",
        "تصمیم‌گیری",
        "فرآیند یا دستور العمل",
        "ورودی/خروجی"
      ],
      "answer": 2
    },
    {
      "id": "143",
      "course": "fundamental-cs",
      "label": "فلوچارت و نمادهای آن",
      "number": 3,
      "question": "لوزی شکلی که در فلوچارت ظاهر می‌شود بیانگر چیست؟",
      "options": [
        "شروع/پایان",
        "تصمیم یا شرط",
        "حلقه",
        "ورودی"
      ],
      "answer": 1
    },
    {
      "id": "144",
      "course": "fundamental-cs",
      "label": "فلوچارت و نمادهای آن",
      "number": 4,
      "question": "کدام نماد در فلوچارت برای نمایش دریافت داده‌ (input) یا خروج داده (output) استفاده می‌شود؟",
      "options": [
        "موازی‌الأضلاع",
        "مستطیل",
        "لوزی",
        "دایره"
      ],
      "answer": 0
    },
    {
      "id": "145",
      "course": "fundamental-cs",
      "label": "فلوچارت و نمادهای آن",
      "number": 5,
      "question": "کدام نماد در فلوچارت برای اتصال یا ادامه از یک نقطه به نقطه دیگر، بدون تداخل خطوط، به کار می‌رود؟",
      "options": [
        "دایره کوچک (connector)",
        "مستطیل",
        "بیضی",
        "موازی‌الأضلاع"
      ],
      "answer": 0
    },
    {
      "id": "146",
      "course": "fundamental-cs",
      "label": "فلوچارت و نمادهای آن",
      "number": 6,
      "question": "پیکان‌ها (فلش‌ها) در فلوچارت چه کاربردی دارند؟",
      "options": [
        "نشان دادن جهت جریان کنترل",
        "نشان دادن ورودی",
        "شناسایی خطا",
        "تعیین شرط"
      ],
      "answer": 0
    },
    {
      "id": "147",
      "course": "fundamental-cs",
      "label": "فلوچارت و نمادهای آن",
      "number": 7,
      "question": "در یک فلوچارت، دستور چاپ پیام “Hello” را معمولاً با کدام نماد نمایش می‌دهند؟",
      "options": [
        "بیضی",
        "لوزی",
        "موازی‌الأضلاع",
        "دایره"
      ],
      "answer": 2
    },
    {
      "id": "148",
      "course": "fundamental-cs",
      "label": "فلوچارت و نمادهای آن",
      "number": 8,
      "question": "کدام گزینه درباره‌ی ترتیب انجام مراحل در فلوچارت صحیح است؟",
      "options": [
        "مراحل هیچ ترتیبی ندارند",
        "مراحل تنها با فلش به هم متصل می‌شوند",
        "مراحل باید از چپ به راست رسم شوند",
        "مراحل همپوشانی دارند"
      ],
      "answer": 1
    },
    {
      "id": "149",
      "course": "fundamental-cs",
      "label": "فلوچارت و نمادهای آن",
      "number": 9,
      "question": "کاربرد نماد ‘subroutine’ (زیرروال) در فلوچارت چیست؟",
      "options": [
        "نمایش تصمیم‌گیری",
        "نمایش پردازش ورودی",
        "نمایش اجرای یک بخش تکراری یا تابع فرعی",
        "نمایش اتمام برنامه"
      ],
      "answer": 2
    },
    {
      "id": "150",
      "course": "fundamental-cs",
      "label": "فلوچارت و نمادهای آن",
      "number": 10,
      "question": "کدام یک از دلایل زیر برای استفاده از فلوچارت *غلط* است؟",
      "options": [
        "ساده‌سازی روند درک الگوریتم‌ها",
        "تسهیل تحلیل و اشکال‌زدایی",
        "افزایش پیچیدگی برنامه‌نویسی",
        "کمک به مستندسازی سیستم"
      ],
      "answer": 2
    },
    {
      "id": "151",
      "course": "fundamental-cs",
      "label": "لیست، پشته و صف (Basics)",
      "number": 1,
      "question": "کدام گزینه در توصیف لیست (List) صحیح است؟",
      "options": [
        "ساختاری خطی که عناصر پشت سر هم قرار دارند و به هر عنصر می‌توان به طور مستقیم دسترسی داشت",
        "ساختاری حلقوی است",
        "فقط عنصر اول و آخر قابل دسترسی هستند",
        "ساختاری غیرقابل تغییر است"
      ],
      "answer": 0
    },
    {
      "id": "152",
      "course": "fundamental-cs",
      "label": "لیست، پشته و صف (Basics)",
      "number": 2,
      "question": "کدام ویژگی زیر مربوط به پشته (Stack) است؟",
      "options": [
        "LIFO (آخر وارد، اول خارج)",
        "FIFO (اول وارد، اول خارج)",
        "دسترسی مستقیم به هر عنصر",
        "در یک حلقه قرار دارد"
      ],
      "answer": 0
    },
    {
      "id": "153",
      "course": "fundamental-cs",
      "label": "لیست، پشته و صف (Basics)",
      "number": 3,
      "question": "عملیات 'push' در پشته چه انجام می‌دهد؟",
      "options": [
        "حذف عنصر اول پشته",
        "افزودن عنصر جدید به بالای پشته",
        "افزودن عنصر جدید به پایین صف",
        "برگرداندن اندازه پشته"
      ],
      "answer": 1
    },
    {
      "id": "154",
      "course": "fundamental-cs",
      "label": "لیست، پشته و صف (Basics)",
      "number": 4,
      "question": "کدامیک از ساختارهای داده، رفتار صف (Queue) را توصیف می‌کند؟",
      "options": [
        "LIFO",
        "FIFO",
        "LILO",
        "FILO"
      ],
      "answer": 1
    },
    {
      "id": "155",
      "course": "fundamental-cs",
      "label": "لیست، پشته و صف (Basics)",
      "number": 5,
      "question": "در صف (Queue)، حذف عنصر با چه نامی شناخته می‌شود؟",
      "options": [
        "push",
        "enqueue",
        "pop",
        "dequeue"
      ],
      "answer": 3
    },
    {
      "id": "156",
      "course": "fundamental-cs",
      "label": "لیست، پشته و صف (Basics)",
      "number": 6,
      "question": "اگر عناصری به ترتیب ۲، ۴، ۶ وارد یک پشته شوند و سپس یک pop انجام شود، کدام عنصر حذف می‌شود؟",
      "options": [
        "۲",
        "۴",
        "۶",
        "هیچکدام"
      ],
      "answer": 2
    },
    {
      "id": "157",
      "course": "fundamental-cs",
      "label": "لیست، پشته و صف (Basics)",
      "number": 7,
      "question": "در یک صف، عنصری که اول وارد شود، ... خارج می‌شود.",
      "options": [
        "اول",
        "آخر",
        "تصادفی",
        "هیچ وقت"
      ],
      "answer": 0
    },
    {
      "id": "158",
      "course": "fundamental-cs",
      "label": "لیست، پشته و صف (Basics)",
      "number": 8,
      "question": "کدام مورد یک عملیات معمولی در لیست‌ها محسوب نمی‌شود؟",
      "options": [
        "درج عنصر",
        "حذف عنصر",
        "مرتب‌سازی عناصر",
        "pop"
      ],
      "answer": 3
    },
    {
      "id": "159",
      "course": "fundamental-cs",
      "label": "لیست، پشته و صف (Basics)",
      "number": 9,
      "question": "آیا می‌توان از یک صف برای مدیریت وظایف پرینت گرفتن (Print Queue) استفاده کرد؟",
      "options": [
        "بله",
        "خیر",
        "فقط برای لیست‌ها",
        "فقط برای پشته‌ها"
      ],
      "answer": 0
    },
    {
      "id": "160",
      "course": "fundamental-cs",
      "label": "لیست، پشته و صف (Basics)",
      "number": 10,
      "question": "چه تفاوتی میان پشته و صف وجود دارد؟",
      "options": [
        "در پشته، حذف و اضافه فقط از یک طرف؛ در صف، حذف از یک طرف و اضافه از طرف دیگر",
        "در صف، حذف و اضافه فقط از یک طرف؛ در پشته، از دو طرف",
        "هردو مشابه هستند",
        "هیچ تفاوتی وجود ندارد"
      ],
      "answer": 0
    },
    {
      "id": "161",
      "course": "fundamental-cs",
      "label": "مدیریت فایل‌ها",
      "number": 1,
      "question": "کدام گزینه درباره فایل صحیح است؟",
      "options": [
        "فایل تنها یک نوع داده را ذخیره می‌کند",
        "فایل مجموعه‌ای از داده‌هاست که بر روی حافظه ثانویه ذخیره می‌شود",
        "فایل فقط در حافظه اصلی قابل استفاده است",
        "فایل نمی‌تواند اطلاعات متنی ذخیره کند"
      ],
      "answer": 1
    },
    {
      "id": "162",
      "course": "fundamental-cs",
      "label": "مدیریت فایل‌ها",
      "number": 2,
      "question": "برای باز کردن یک فایل جهت خواندن داده‌ها در اغلب زبان‌های برنامه‌نویسی، کدام حالت استفاده می‌شود؟",
      "options": [
        "w",
        "r",
        "a",
        "x"
      ],
      "answer": 1
    },
    {
      "id": "163",
      "course": "fundamental-cs",
      "label": "مدیریت فایل‌ها",
      "number": 3,
      "question": "در عملیات مدیریت فایل، عملکرد دستور 'append' چیست؟",
      "options": [
        "جایگزینی کل محتویات فایل",
        "حذف فایل",
        "اضافه کردن داده جدید به انتهای فایل بدون حذف اطلاعات قبلی",
        "خواندن فایل به صورت خط به خط"
      ],
      "answer": 2
    },
    {
      "id": "164",
      "course": "fundamental-cs",
      "label": "مدیریت فایل‌ها",
      "number": 4,
      "question": "جهت حذف یک فایل در سیستم‌عامل ویندوز، کدام دستور در خط فرمان استفاده می‌شود؟",
      "options": [
        "delete",
        "del",
        "remove",
        "rm"
      ],
      "answer": 1
    },
    {
      "id": "165",
      "course": "fundamental-cs",
      "label": "مدیریت فایل‌ها",
      "number": 5,
      "question": "در زبان برنامه‌نویسی Python، تابع 'close()' برای چه کاری استفاده می‌شود؟",
      "options": [
        "باز کردن فایل",
        "بستن فایل پس از پایان عملیات",
        "خواندن داده از فایل",
        "پاک کردن فایل"
      ],
      "answer": 1
    },
    {
      "id": "166",
      "course": "fundamental-cs",
      "label": "مدیریت فایل‌ها",
      "number": 6,
      "question": "اگر فایل در حالت فقط خواندنی باز شود و سعی به نوشتن داده کنیم، چه اتفاقی می‌افتد؟",
      "options": [
        "داده با موفقیت نوشته می‌شود",
        "محتوای فایل حذف می‌شود",
        "خطای دسترسی رخ می‌دهد",
        "فایل به حالت فقط خواندنی تغییر می‌کند"
      ],
      "answer": 2
    },
    {
      "id": "167",
      "course": "fundamental-cs",
      "label": "مدیریت فایل‌ها",
      "number": 7,
      "question": "کدام روش برای خواندن تمام خطوط یک فایل متنی در Python مناسب است؟",
      "options": [
        "استفاده از read()",
        "استفاده از readlines()",
        "استفاده از write()",
        "استفاده از close()"
      ],
      "answer": 1
    },
    {
      "id": "168",
      "course": "fundamental-cs",
      "label": "مدیریت فایل‌ها",
      "number": 8,
      "question": "برای ایجاد یک فایل جدید اگر وجود نداشته باشد، کدام حالت باز کردن فایل استفاده می‌شود؟",
      "options": [
        "r",
        "a",
        "w",
        "x"
      ],
      "answer": 3
    },
    {
      "id": "169",
      "course": "fundamental-cs",
      "label": "مدیریت فایل‌ها",
      "number": 9,
      "question": "کدام گزینه زیر از مزایای استفاده از فایل‌ها در برنامه‌نویسی است؟",
      "options": [
        "حجم نامحدود داده نسبت به حافظه اصلی",
        "سرعت بیشتر نسبت به پردازش در حافظه اصلی",
        "عدم نیاز به مدیریت داده",
        "فایل‌ها فقط برای سیستم‌عامل لازم هستند"
      ],
      "answer": 0
    },
    {
      "id": "170",
      "course": "fundamental-cs",
      "label": "مدیریت فایل‌ها",
      "number": 10,
      "question": "در کدام حالت فایل فقط زمانی ساخته می‌شود که وجود نداشته باشد و اگر وجود داشته باشد، باز نمی‌شود؟",
      "options": [
        "r",
        "w",
        "a",
        "x"
      ],
      "answer": 3
    },
    {
      "id": "171",
      "course": "fundamental-cs",
      "label": "مفاهیم خطا و نحوه اشکال‌زدایی",
      "number": 1,
      "question": "کدام یک جزء اصلی دسته‌بندی خطاهای برنامه‌نویسی است؟",
      "options": [
        "Syntax Error (خطای نحوی)",
        "Functional Error",
        "User Error",
        "External Error"
      ],
      "answer": 0
    },
    {
      "id": "172",
      "course": "fundamental-cs",
      "label": "مفاهیم خطا و نحوه اشکال‌زدایی",
      "number": 2,
      "question": "خطایی که در زمان اجرا و به دلیل عملیات غیرمنتظره مانند تقسیم بر صفر رخ می‌دهد، چه نام دارد؟",
      "options": [
        "Syntax Error",
        "Runtime Error",
        "Logical Error",
        "Compilation Error"
      ],
      "answer": 1
    },
    {
      "id": "173",
      "course": "fundamental-cs",
      "label": "مفاهیم خطا و نحوه اشکال‌زدایی",
      "number": 3,
      "question": "بهترین روش برای یافتن محل خطاهای منطقی در برنامه چیست؟",
      "options": [
        "خواندن کد بدون اجرا",
        "استفاده از چاپ مقدار متغیرها (print-debugging)",
        "بی‌توجهی به خطاها",
        "حذف کردن بخش‌های مختلف کد"
      ],
      "answer": 1
    },
    {
      "id": "174",
      "course": "fundamental-cs",
      "label": "مفاهیم خطا و نحوه اشکال‌زدایی",
      "number": 4,
      "question": "ساده‌ترین ابزار اشکال‌زدایی که تقریباً در تمام زبان‌ها وجود دارد چیست؟",
      "options": [
        "Debugger گرافیکی",
        "تست یونیت",
        "دستور print یا log",
        "امولاتور"
      ],
      "answer": 2
    },
    {
      "id": "175",
      "course": "fundamental-cs",
      "label": "مفاهیم خطا و نحوه اشکال‌زدایی",
      "number": 5,
      "question": "کدام یک از خطاها اغلب توسط کامپایلر قبل از اجرای برنامه شناسایی می‌شود؟",
      "options": [
        "Logical Error",
        "Runtime Error",
        "Syntax Error",
        "Semantic Error"
      ],
      "answer": 2
    },
    {
      "id": "176",
      "course": "fundamental-cs",
      "label": "مفاهیم خطا و نحوه اشکال‌زدایی",
      "number": 6,
      "question": "اولین گام در اشکال‌زدایی موفق چیست؟",
      "options": [
        "نوشتن کد جدید",
        "تشخیص و بازسازی شرایط خطا",
        "آزمایش برنامه روی کامپیوتر دیگر",
        "پاک کردن کد"
      ],
      "answer": 1
    },
    {
      "id": "177",
      "course": "fundamental-cs",
      "label": "مفاهیم خطا و نحوه اشکال‌زدایی",
      "number": 7,
      "question": "کدام ویژگی از Debugger‌ها معمولاً وجود دارد؟",
      "options": [
        "امکان مشاهده مقدار متغیرها در هر لحظه اجرا",
        "تغییر زبان برنامه",
        "تغییر نوع خطاها",
        "حذف کامل خطاها به‌طور خودکار"
      ],
      "answer": 0
    },
    {
      "id": "178",
      "course": "fundamental-cs",
      "label": "مفاهیم خطا و نحوه اشکال‌زدایی",
      "number": 8,
      "question": "خطای منطقی (Logical Error) کدام ویژگی را دارد؟",
      "options": [
        "باعث توقف اجرای برنامه می‌شود",
        "از نظر نحوی صحیح است اما نتیجه خروجی غلط می‌دهد",
        "توسط مفسر شناسایی می‌شود",
        "اغلب با Exception رفع می‌شود"
      ],
      "answer": 1
    },
    {
      "id": "179",
      "course": "fundamental-cs",
      "label": "مفاهیم خطا و نحوه اشکال‌زدایی",
      "number": 9,
      "question": "کدام یک ابزار رایج برای اشکال‌زدایی کدهای Python است؟",
      "options": [
        "GDB",
        "PDB",
        "JDB",
        "EDB"
      ],
      "answer": 1
    },
    {
      "id": "180",
      "course": "fundamental-cs",
      "label": "مفاهیم خطا و نحوه اشکال‌زدایی",
      "number": 10,
      "question": "کدام کار باعث جلوگیری از بروز بسیاری از خطاها پیش از اجرا می‌شود؟",
      "options": [
        "نوشتن تست واحد (Unit Test)",
        "خواندن مستندات",
        "نوشتن توضیح برای هر خط از کد",
        "کپی کردن کد از اینترنت"
      ],
      "answer": 0
    },
    {
      "id": "181",
      "course": "fundamental-cs",
      "label": "مقدمه‌ای بر زبان‌های برنامه‌نویسی",
      "number": 1,
      "question": "کدام گزینه به عنوان اولین مرحله‌ای که برنامه‌نویس یک برنامه را می‌نویسد، شناخته می‌شود؟",
      "options": [
        "تست و اشکال‌زدایی",
        "تجزیه و تحلیل و نوشتن الگوریتم",
        "استخراج داده‌ها",
        "نوشتن مستندات"
      ],
      "answer": 1
    },
    {
      "id": "182",
      "course": "fundamental-cs",
      "label": "مقدمه‌ای بر زبان‌های برنامه‌نویسی",
      "number": 2,
      "question": "کدام زبان برنامه‌نویسی به عنوان اولین زبان سطح بالا شناخته می‌شود؟",
      "options": [
        "C++",
        "Python",
        "FORTRAN",
        "Java"
      ],
      "answer": 2
    },
    {
      "id": "183",
      "course": "fundamental-cs",
      "label": "مقدمه‌ای بر زبان‌های برنامه‌نویسی",
      "number": 3,
      "question": "کدام گزینه درباره زبان ماشین صحیح است؟",
      "options": [
        "قابل فهم برای انسان است",
        "از ۰ و ۱ تشکیل شده و مستقیم توسط کامپیوتر اجرا می‌شود",
        "برای ارتباط با پایگاه داده کاربرد دارد",
        "تبدیل آن به زبان سطح بالا آسان است"
      ],
      "answer": 1
    },
    {
      "id": "184",
      "course": "fundamental-cs",
      "label": "مقدمه‌ای بر زبان‌های برنامه‌نویسی",
      "number": 4,
      "question": "کدام یک از زبان‌های زیر مفسری (interpreter-based) است؟",
      "options": [
        "C",
        "Python",
        "Assembly",
        "C++"
      ],
      "answer": 1
    },
    {
      "id": "185",
      "course": "fundamental-cs",
      "label": "مقدمه‌ای بر زبان‌های برنامه‌نویسی",
      "number": 5,
      "question": "مفسر (Interpreter) چه کاری انجام می‌دهد؟",
      "options": [
        "کل برنامه را قبل از اجرا به زبان ماشین تبدیل می‌کند",
        "سطر به سطر برنامه را اجرا می‌کند",
        "صرفاً برای خطایابی استفاده می‌شود",
        "فقط برای زبان‌های ماشین کاربرد دارد"
      ],
      "answer": 1
    },
    {
      "id": "186",
      "course": "fundamental-cs",
      "label": "مقدمه‌ای بر زبان‌های برنامه‌نویسی",
      "number": 6,
      "question": "زبان BASIC به چه منظوری طراحی شد؟",
      "options": [
        "برنامه‌نویسی سیستم‌های عامل",
        "آموزش اصول اولیه برنامه‌نویسی",
        "برنامه‌نویسی موبایل",
        "طراحی صفحات وب"
      ],
      "answer": 1
    },
    {
      "id": "187",
      "course": "fundamental-cs",
      "label": "مقدمه‌ای بر زبان‌های برنامه‌نویسی",
      "number": 7,
      "question": "کدام گزینه صحیح است؟",
      "options": [
        "هر زبان برنامه‌نویسی دارای نحو (syntax) خاص خودش است",
        "تمام زبان‌های برنامه‌نویسی دستوراتی یکسان دارند",
        "همه زبان‌ها فقط به انگلیسی نوشته می‌شوند",
        "برای شروع برنامه‌نویسی فقط باید زبان ماشین را بلد باشیم"
      ],
      "answer": 0
    },
    {
      "id": "188",
      "course": "fundamental-cs",
      "label": "مقدمه‌ای بر زبان‌های برنامه‌نویسی",
      "number": 8,
      "question": "زبان برنامه‌نویسی سطح پایین کدام است؟",
      "options": [
        "Java",
        "Python",
        "Assembly",
        "Pascal"
      ],
      "answer": 2
    },
    {
      "id": "189",
      "course": "fundamental-cs",
      "label": "مقدمه‌ای بر زبان‌های برنامه‌نویسی",
      "number": 9,
      "question": "کدام گزینه جزء زبان‌های سطح بالا محسوب می‌شود؟",
      "options": [
        "Assembly",
        "C++",
        "زبان ماشین",
        "microcode"
      ],
      "answer": 1
    },
    {
      "id": "190",
      "course": "fundamental-cs",
      "label": "مقدمه‌ای بر زبان‌های برنامه‌نویسی",
      "number": 10,
      "question": "وظیفه کامپایلر (Compiler) چیست؟",
      "options": [
        "تبدیل برنامه به زبان ماشین",
        "اشکال‌زدایی خودکار برنامه",
        "فقط تحلیل معنایی کد",
        "ترجمه کد به زبان انگلیسی"
      ],
      "answer": 0
    },
    {
      "id": "191",
      "course": "fundamental-cs",
      "label": "نمونه الگوریتم و تبدیل به فلوچارت",
      "number": 1,
      "question": "اولین مرحله در طراحی یک الگوریتم چیست؟",
      "options": [
        "نوشتن کد نهایی",
        "درک مسئله و تعیین ورودی و خروجی",
        "اجرای برنامه",
        "تست روی داده‌های واقعی"
      ],
      "answer": 1
    },
    {
      "id": "192",
      "course": "fundamental-cs",
      "label": "نمونه الگوریتم و تبدیل به فلوچارت",
      "number": 2,
      "question": "در یک فلوچارت، شروع و پایان الگوریتم با چه نمادی نمایش داده می‌شود؟",
      "options": [
        "مربع",
        "بیضی",
        "متوازی‌الاضلاع",
        "مستطیل"
      ],
      "answer": 1
    },
    {
      "id": "193",
      "course": "fundamental-cs",
      "label": "نمونه الگوریتم و تبدیل به فلوچارت",
      "number": 3,
      "question": "کدام گزینه گام صحیح بعد از تهیه الگوریتم است؟",
      "options": [
        "تبدیل الگوریتم به فلوچارت",
        "اجرای برنامه",
        "نوشتن کد برنامه به یک زبان خاص",
        "تست دستی داده‌ها"
      ],
      "answer": 0
    },
    {
      "id": "194",
      "course": "fundamental-cs",
      "label": "نمونه الگوریتم و تبدیل به فلوچارت",
      "number": 4,
      "question": "در فلوچارت، برای نمایش عملیات ورودی/خروجی از چه نمادی استفاده می‌شود؟",
      "options": [
        "متوازی‌الاضلاع",
        "مستطیل",
        "بیضی",
        "لوزی"
      ],
      "answer": 0
    },
    {
      "id": "195",
      "course": "fundamental-cs",
      "label": "نمونه الگوریتم و تبدیل به فلوچارت",
      "number": 5,
      "question": "وظیفه نماد مستطیل در فلوچارت چیست؟",
      "options": [
        "تصمیم‌گیری",
        "نمایش عملیات پردازشی (فرآیندی)",
        "ورودی و خروجی",
        "شروع و پایان"
      ],
      "answer": 1
    },
    {
      "id": "196",
      "course": "fundamental-cs",
      "label": "نمونه الگوریتم و تبدیل به فلوچارت",
      "number": 6,
      "question": "الگوریتم محاسبه میانگین سه عدد را به صورت خلاصه چطور بیان می‌کنند؟",
      "options": [
        "جمع سه عدد تقسیم بر ۲",
        "جمع سه عدد تقسیم بر ۳",
        "ضرب سه عدد",
        "کم کردن اعداد از یکدیگر"
      ],
      "answer": 1
    },
    {
      "id": "197",
      "course": "fundamental-cs",
      "label": "نمونه الگوریتم و تبدیل به فلوچارت",
      "number": 7,
      "question": "نماد لوزی در فلوچارت معمولاً نشان‌دهنده چیست؟",
      "options": [
        "عملیات ریاضی",
        "تصمیم‌گیری و شرط",
        "شروع برنامه",
        "نمایش داده"
      ],
      "answer": 1
    },
    {
      "id": "198",
      "course": "fundamental-cs",
      "label": "نمونه الگوریتم و تبدیل به فلوچارت",
      "number": 8,
      "question": "کدام گزینه یکی از مزایای استفاده از فلوچارت است؟",
      "options": [
        "پیچیده‌تر شدن فهم برنامه",
        "ساده‌تر شدن رفع خطا و یافتن مسیر اجرا",
        "نیاز به دانش پیشرفته ریاضی",
        "حذف نیاز به نوشتن الگوریتم"
      ],
      "answer": 1
    },
    {
      "id": "199",
      "course": "fundamental-cs",
      "label": "نمونه الگوریتم و تبدیل به فلوچارت",
      "number": 9,
      "question": "در فلوچارت، پیکان‌ها یا فلش‌ها چه هدفی دارند؟",
      "options": [
        "توضیح مراحل",
        "نمایش جهت و ترتیب اجرای دستورات",
        "مشخص کردن ورودی",
        "بیان نتایج نهایی"
      ],
      "answer": 1
    },
    {
      "id": "200",
      "course": "fundamental-cs",
      "label": "نمونه الگوریتم و تبدیل به فلوچارت",
      "number": 10,
      "question": "کدام گام زیر قبل از نوشتن فلوچارت توصیه می‌شود؟",
      "options": [
        "بررسی محدودیت‌های مسئله و نگارش الگوریتم",
        "نوشتن مستندات نهایی محصول",
        "اجرا و تست برنامه",
        "تنظیم گرافیک خروجی"
      ],
      "answer": 0
    },
    {
      "id": "201",
      "course": "fundamental-cs",
      "label": "نوشتن اولین برنامه",
      "number": 1,
      "question": "در زبان C اولین دستوری که در برنامه لازم است وارد شود کدام است",
      "options": [
        "#include stdio.h",
        "print زبان پایتون Hello World",
        "using namespace std",
        "def main"
      ],
      "answer": 0
    },
    {
      "id": "202",
      "course": "fundamental-cs",
      "label": "نوشتن اولین برنامه",
      "number": 2,
      "question": "کدام گزینه خروجی برنامه پایتون زیر است print Salam",
      "options": [
        "خطا دارد",
        "Salam",
        "در خروجی علامت نقل قول می آید",
        "خود دستور چاپ می شود"
      ],
      "answer": 1
    },
    {
      "id": "203",
      "course": "fundamental-cs",
      "label": "نوشتن اولین برنامه",
      "number": 3,
      "question": "در زبان C تابع اصلی اجرای برنامه با چه نامی نوشته می شود",
      "options": [
        "main",
        "start",
        "begin",
        "first"
      ],
      "answer": 0
    },
    {
      "id": "204",
      "course": "fundamental-cs",
      "label": "نوشتن اولین برنامه",
      "number": 4,
      "question": "برای اجرای برنامه پایتون با نام فایل example.py در ترمینال چه دستوری وارد می کنیم",
      "options": [
        "run example.py",
        "python example.py",
        "execute example.py",
        "cmd example.py"
      ],
      "answer": 1
    },
    {
      "id": "205",
      "course": "fundamental-cs",
      "label": "نوشتن اولین برنامه",
      "number": 5,
      "question": "در زبان C برای نمایش متن روی صفحه کدام تابع استفاده می شود",
      "options": [
        "printf",
        "cout",
        "System.out.println",
        "print"
      ],
      "answer": 0
    },
    {
      "id": "206",
      "course": "fundamental-cs",
      "label": "نوشتن اولین برنامه",
      "number": 6,
      "question": "انتهای هر دستور در زبان C معمولاً با چه علامتی تمام می شود",
      "options": [
        "دو نقطه",
        "نقطه",
        "نقطه ویرگول",
        "پرانتز"
      ],
      "answer": 2
    },
    {
      "id": "207",
      "course": "fundamental-cs",
      "label": "نوشتن اولین برنامه",
      "number": 7,
      "question": "برای چاپ متن Hello World در پایتون کدام دستور صحیح است",
      "options": [
        "cout کوچکتر کوچکتر Hello World",
        "echo Hello World",
        "print پرانتز باز Hello World پرانتز بسته",
        "printf پرانتز باز Hello World پرانتز بسته"
      ],
      "answer": 2
    },
    {
      "id": "208",
      "course": "fundamental-cs",
      "label": "نوشتن اولین برنامه",
      "number": 8,
      "question": "اجرای برنامه C پس از ترجمه توسط کامپایلر با چه فایلی صورت می گیرد",
      "options": [
        "فایل سورس با پسوند c",
        "فایل اجرایی با پسوند exe یا بدون پسوند در لینوکس",
        "فایل کتابخانه با پسوند h",
        "فایل اسکریپت با پسوند py"
      ],
      "answer": 1
    },
    {
      "id": "209",
      "course": "fundamental-cs",
      "label": "نوشتن اولین برنامه",
      "number": 9,
      "question": "کدام گزینه ساختار درست اولین برنامه C را نشان می دهد",
      "options": [
        "کد شامل معرفی stdio و تابع main و چاپ متن Hello World و بازگشت عدد صفر",
        "یک خط دستور print با متن Hello World",
        "System.out.println استفاده برای چاپ متن",
        "تعریف تابع main و چاپ Hello World بدون معرفی کتابخانه"
      ],
      "answer": 0
    },
    {
      "id": "210",
      "course": "fundamental-cs",
      "label": "نوشتن اولین برنامه",
      "number": 10,
      "question": "کدام یک از موارد زیر درباره اولین برنامه صحیح است",
      "options": [
        "همیشه باید Hello World چاپ شود",
        "هدف آشنایی با ساختار کلی و اجرای برنامه است",
        "تنها با زبان C نوشته می شود",
        "بدون نیاز به ذخیره سازی قابل اجرا است"
      ],
      "answer": 1
    },
    {
      "id": "211",
      "course": "fundamental-cs",
      "label": "تعریف و استفاده از توابع",
      "number": 1,
      "question": "کدام گزینه تعریف تابع را در زبان پایتون به درستی نشان می دهد",
      "options": [
        "def myFunc با کروشه و دونقطه",
        "define myFunc پرانتز دونقطه",
        "function myFunc پرانتز",
        "def myFunc پرانتز باز بسته دونقطه"
      ],
      "answer": 3
    },
    {
      "id": "212",
      "course": "fundamental-cs",
      "label": "تعریف و استفاده از توابع",
      "number": 2,
      "question": "چه مزیتی دارد که برنامه را به چندین تابع تقسیم کنیم",
      "options": [
        "کد خواناتر و عیب یابی آسان تر می شود",
        "زمان اجرای برنامه کاهش می یابد",
        "نیازی به استفاده از متغیرها نیست",
        "تعداد حلقه ها در برنامه کم می شود"
      ],
      "answer": 0
    },
    {
      "id": "213",
      "course": "fundamental-cs",
      "label": "تعریف و استفاده از توابع",
      "number": 3,
      "question": "کدام یک از کدهای زیر تابعی در زبان C را نشان می دهد که عدد ورودی را دوبرابر می کند",
      "options": [
        "int double پرانتز باز int num پرانتز بسته آکولاد باز return num ضربدر دو آکولاد بسته",
        "double int پرانتز باز num آکولاد باز return num ضربدر دو آکولاد بسته",
        "function double پرانتز باز int num پرانتز بسته آکولاد باز num ضربدر دو آکولاد بسته",
        "تعریف تابع دوبرابر در پایتون"
      ],
      "answer": 0
    },
    {
      "id": "214",
      "course": "fundamental-cs",
      "label": "تعریف و استفاده از توابع",
      "number": 4,
      "question": "در یک تابع مقدار خروجی تابع با کدام دستور بازگردانده می شود",
      "options": [
        "return",
        "output",
        "print",
        "giveback"
      ],
      "answer": 0
    },
    {
      "id": "215",
      "course": "fundamental-cs",
      "label": "تعریف و استفاده از توابع",
      "number": 5,
      "question": "اگر تابعی تعریف کنیم که ورودی نداشته باشد فراخوانی آن چگونه است مثال زبان C",
      "options": [
        "myFunc با کروشه",
        "myFunc با پرانتز باز بسته و نیم فاصله",
        "call myFunc",
        "myFunc با آکولاد"
      ],
      "answer": 1
    },
    {
      "id": "216",
      "course": "fundamental-cs",
      "label": "تعریف و استفاده از توابع",
      "number": 6,
      "question": "کدام گزینه درباره پارامترهای ورودی تابع صحیح است",
      "options": [
        "پارامترها فقط در تعریف تابع و نه فراخوانی",
        "پارامترها اول در تعریف تابع ذکر می شوند و بعد مقدار هنگام فراخوانی داده می شود",
        "پارامترها فقط هنگام فراخوانی تابع نوشته می شوند",
        "پارامترها فقط برای توابع بدون خروجی استفاده می شوند"
      ],
      "answer": 1
    },
    {
      "id": "217",
      "course": "fundamental-cs",
      "label": "تعریف و استفاده از توابع",
      "number": 7,
      "question": "در زبان پایتون دستور return چه کار می کند",
      "options": [
        "پایان دادن به اجرای تابع و برگرداندن مقدار",
        "عملیات چاپ انجام می دهد",
        "تعریف متغیر جدید",
        "فراخوانی تابع دیگر"
      ],
      "answer": 0
    },
    {
      "id": "218",
      "course": "fundamental-cs",
      "label": "تعریف و استفاده از توابع",
      "number": 8,
      "question": "کدام گزینه برای فراخوانی تابع با دو پارامتر درست است مثال زبان C",
      "options": [
        "myFunc پرانتز باز a کاما b پرانتز بسته و نیم فاصله",
        "myFunc فاصله a کاما b",
        "call myFunc پرانتز باز a کاما b پرانتز بسته",
        "myFunc آکولاد باز a کاما b آکولاد بسته"
      ],
      "answer": 0
    },
    {
      "id": "219",
      "course": "fundamental-cs",
      "label": "تعریف و استفاده از توابع",
      "number": 9,
      "question": "خروجی تابعی که ورودی هفت را سه واحد بیشتر کند چیست",
      "options": [
        "هفت",
        "سه",
        "ده",
        "بیست و یک"
      ],
      "answer": 2
    },
    {
      "id": "220",
      "course": "fundamental-cs",
      "label": "تعریف و استفاده از توابع",
      "number": 10,
      "question": "کدام عبارت درباره نامگذاری توابع صحیح نیست",
      "options": [
        "نام تابع باید با حرف یا آندرلاین شروع شود",
        "در نام تابع فاصله مجاز نیست",
        "نام تابع می تواند شامل عدد باشد",
        "نام تابع نمی تواند با عدد شروع شود"
      ],
      "answer": 3
    }
  ],
  "forumPosts": [
    {
      "id": "1",
      "userId": 1,
      "username": "hossein123",
      "title": "تفاوت حلقه for و while",
      "body": "کسی میتونه تفاوت for و while رو با مثال توضیح بده؟",
      "courseKey": "qmbni",
      "likes": 15,
      "commentsCount": 8,
      "created": "2025-07-20T09:05:00Z",
      "lastActivity": "2025-07-21T11:31:00Z"
    }
  ],
  "forumComments": [
    {
      "id": "1",
      "postId": 1,
      "userId": 3,
      "username": "bagheri",
      "body": "for معمولا تعداد دفعات اجرای مشخص داره ولی while نه.",
      "created": "2025-07-20T10:16:00Z"
    }
  ],
  "achievementsList": [
    {
      "id": "1",
      "name": "شروع کننده",
      "icon": "star",
      "desc": "اولین درس را تکمیل کردید"
    },
    {
      "id": "2",
      "name": "ثبت رکورد بازی",
      "icon": "gamepad",
      "desc": "رکورد عالی در بازی ثبت کردی!"
    }
  ]
}